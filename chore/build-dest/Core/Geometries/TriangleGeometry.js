import BasicGeometry from "./Base/BasicGeometry";
import Vector3 from "../../Math/Vector3";
import ContextComponents from "../../ContextComponents";
import JThreeContext from "../../JThreeContext";
class TriangleGeometry extends BasicGeometry {
    constructor(name) {
        super();
        this._first = new Vector3(0, 1, 0);
        this._second = new Vector3(1, 0, 0);
        this._third = new Vector3(-1, 0, 0);
        const rm = JThreeContext.getContextComponent(ContextComponents.ResourceManager);
        this.indexBuffer = rm.createBuffer(name + "index", WebGLRenderingContext.ELEMENT_ARRAY_BUFFER, WebGLRenderingContext.STATIC_DRAW, 1, WebGLRenderingContext.UNSIGNED_BYTE);
        this.positionBuffer = rm.createBuffer(name + "-pos", WebGLRenderingContext.ARRAY_BUFFER, WebGLRenderingContext.STATIC_DRAW, 3, WebGLRenderingContext.FLOAT);
        this.normalBuffer = rm.createBuffer(name + "-nor", WebGLRenderingContext.ARRAY_BUFFER, WebGLRenderingContext.STATIC_DRAW, 3, WebGLRenderingContext.FLOAT);
        this.uvBuffer = rm.createBuffer(name + "-uv", WebGLRenderingContext.ARRAY_BUFFER, WebGLRenderingContext.STATIC_DRAW, 2, WebGLRenderingContext.FLOAT);
        this.__updateBuffers();
    }
    set First(vec) {
        this._first = vec;
        this.__updateBuffers();
    }
    set Second(vec) {
        this._second = vec;
        this.__updateBuffers();
    }
    set Third(vec) {
        this._third = vec;
        this.__updateBuffers();
    }
    __updatePositionBuffer() {
        this.positionBuffer.update(new Float32Array([this._first.X, this._first.Y, this._first.Z, this._second.X, this._second.Y, this._second.Z, this._third.X, this._third.Y, this._third.Z]), 9);
    }
    __updateNormalBuffer() {
        this.normalBuffer.update(new Float32Array([0, 0, -1, 0, 0, -1, 0, 0, -1]), 9);
    }
    __updateUvBuffer() {
        this.uvBuffer.update(new Float32Array([0.5, 0.5, 1, 0, 0, 0]), 6);
    }
    __updateIndexBuffer() {
        this.indexBuffer.update(new Uint8Array([0, 1, 2]), 3);
    }
    __updateBuffers() {
        this.__updatePositionBuffer();
        this.__updateNormalBuffer();
        this.__updateUvBuffer();
        this.__updateIndexBuffer();
    }
}
export default TriangleGeometry;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkNvcmUvR2VvbWV0cmllcy9UcmlhbmdsZUdlb21ldHJ5LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJPQUFPLGFBQWEsTUFBTSxzQkFBc0I7T0FDekMsT0FBTyxNQUFNLG9CQUFvQjtPQUNqQyxpQkFBaUIsTUFBTSx5QkFBeUI7T0FDaEQsYUFBYSxNQUFNLHFCQUFxQjtBQUUvQywrQkFBK0IsYUFBYTtJQUN4QyxZQUFZLElBQVk7UUFDcEIsT0FBTyxDQUFDO1FBU0osV0FBTSxHQUFZLElBQUksT0FBTyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7UUFDdkMsWUFBTyxHQUFZLElBQUksT0FBTyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7UUFDeEMsV0FBTSxHQUFZLElBQUksT0FBTyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztRQVY1QyxNQUFNLEVBQUUsR0FBRyxhQUFhLENBQUMsbUJBQW1CLENBQWtCLGlCQUFpQixDQUFDLGVBQWUsQ0FBQyxDQUFDO1FBQ2pHLElBQUksQ0FBQyxXQUFXLEdBQUcsRUFBRSxDQUFDLFlBQVksQ0FBQyxJQUFJLEdBQUcsT0FBTyxFQUFFLHFCQUFxQixDQUFDLG9CQUFvQixFQUFFLHFCQUFxQixDQUFDLFdBQVcsRUFBRSxDQUFDLEVBQUUscUJBQXFCLENBQUMsYUFBYSxDQUFDLENBQUM7UUFDMUssSUFBSSxDQUFDLGNBQWMsR0FBRyxFQUFFLENBQUMsWUFBWSxDQUFDLElBQUksR0FBRyxNQUFNLEVBQUUscUJBQXFCLENBQUMsWUFBWSxFQUFFLHFCQUFxQixDQUFDLFdBQVcsRUFBRSxDQUFDLEVBQUUscUJBQXFCLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDNUosSUFBSSxDQUFDLFlBQVksR0FBRyxFQUFFLENBQUMsWUFBWSxDQUFDLElBQUksR0FBRyxNQUFNLEVBQUUscUJBQXFCLENBQUMsWUFBWSxFQUFFLHFCQUFxQixDQUFDLFdBQVcsRUFBRSxDQUFDLEVBQUUscUJBQXFCLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDMUosSUFBSSxDQUFDLFFBQVEsR0FBRyxFQUFFLENBQUMsWUFBWSxDQUFDLElBQUksR0FBRyxLQUFLLEVBQUUscUJBQXFCLENBQUMsWUFBWSxFQUFFLHFCQUFxQixDQUFDLFdBQVcsRUFBRSxDQUFDLEVBQUUscUJBQXFCLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDckosSUFBSSxDQUFDLGVBQWUsRUFBRSxDQUFDO0lBQzNCLENBQUM7SUFNRCxJQUFXLEtBQUssQ0FBQyxHQUFZO1FBQ3pCLElBQUksQ0FBQyxNQUFNLEdBQUcsR0FBRyxDQUFDO1FBQ2xCLElBQUksQ0FBQyxlQUFlLEVBQUUsQ0FBQztJQUMzQixDQUFDO0lBR0QsSUFBVyxNQUFNLENBQUMsR0FBWTtRQUMxQixJQUFJLENBQUMsT0FBTyxHQUFHLEdBQUcsQ0FBQztRQUNuQixJQUFJLENBQUMsZUFBZSxFQUFFLENBQUM7SUFDM0IsQ0FBQztJQUVELElBQVcsS0FBSyxDQUFDLEdBQVk7UUFDekIsSUFBSSxDQUFDLE1BQU0sR0FBRyxHQUFHLENBQUM7UUFDbEIsSUFBSSxDQUFDLGVBQWUsRUFBRSxDQUFDO0lBQzNCLENBQUM7SUFFUyxzQkFBc0I7UUFDNUIsSUFBSSxDQUFDLGNBQWMsQ0FBQyxNQUFNLENBQUMsSUFBSSxZQUFZLENBQUMsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUMsRUFBRSxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUMsRUFBRSxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUMsRUFBRSxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUMsRUFBRSxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUMsRUFBRSxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUMsRUFBRSxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUMsRUFBRSxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUMsRUFBRSxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7SUFDaE0sQ0FBQztJQUVTLG9CQUFvQjtRQUMxQixJQUFJLENBQUMsWUFBWSxDQUFDLE1BQU0sQ0FBQyxJQUFJLFlBQVksQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztJQUNsRixDQUFDO0lBRVMsZ0JBQWdCO1FBQ3RCLElBQUksQ0FBQyxRQUFRLENBQUMsTUFBTSxDQUFDLElBQUksWUFBWSxDQUFDLENBQUMsR0FBRyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO0lBQ3RFLENBQUM7SUFFUyxtQkFBbUI7UUFDekIsSUFBSSxDQUFDLFdBQVcsQ0FBQyxNQUFNLENBQUMsSUFBSSxVQUFVLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7SUFDMUQsQ0FBQztJQUVTLGVBQWU7UUFDckIsSUFBSSxDQUFDLHNCQUFzQixFQUFFLENBQUM7UUFDOUIsSUFBSSxDQUFDLG9CQUFvQixFQUFFLENBQUM7UUFDNUIsSUFBSSxDQUFDLGdCQUFnQixFQUFFLENBQUM7UUFDeEIsSUFBSSxDQUFDLG1CQUFtQixFQUFFLENBQUM7SUFDL0IsQ0FBQztBQUNMLENBQUM7QUFFRCxlQUFlLGdCQUFnQixDQUFDIiwiZmlsZSI6IkNvcmUvR2VvbWV0cmllcy9UcmlhbmdsZUdlb21ldHJ5LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEJhc2ljR2VvbWV0cnkgZnJvbSBcIi4vQmFzZS9CYXNpY0dlb21ldHJ5XCI7XG5pbXBvcnQgVmVjdG9yMyBmcm9tIFwiLi4vLi4vTWF0aC9WZWN0b3IzXCI7XG5pbXBvcnQgQ29udGV4dENvbXBvbmVudHMgZnJvbSBcIi4uLy4uL0NvbnRleHRDb21wb25lbnRzXCI7XG5pbXBvcnQgSlRocmVlQ29udGV4dCBmcm9tIFwiLi4vLi4vSlRocmVlQ29udGV4dFwiO1xuaW1wb3J0IFJlc291cmNlTWFuYWdlciBmcm9tIFwiLi4vUmVzb3VyY2VNYW5hZ2VyXCI7XG5jbGFzcyBUcmlhbmdsZUdlb21ldHJ5IGV4dGVuZHMgQmFzaWNHZW9tZXRyeSB7XG4gICAgY29uc3RydWN0b3IobmFtZTogc3RyaW5nKSB7XG4gICAgICAgIHN1cGVyKCk7XG4gICAgICAgIGNvbnN0IHJtID0gSlRocmVlQ29udGV4dC5nZXRDb250ZXh0Q29tcG9uZW50PFJlc291cmNlTWFuYWdlcj4oQ29udGV4dENvbXBvbmVudHMuUmVzb3VyY2VNYW5hZ2VyKTtcbiAgICAgICAgdGhpcy5pbmRleEJ1ZmZlciA9IHJtLmNyZWF0ZUJ1ZmZlcihuYW1lICsgXCJpbmRleFwiLCBXZWJHTFJlbmRlcmluZ0NvbnRleHQuRUxFTUVOVF9BUlJBWV9CVUZGRVIsIFdlYkdMUmVuZGVyaW5nQ29udGV4dC5TVEFUSUNfRFJBVywgMSwgV2ViR0xSZW5kZXJpbmdDb250ZXh0LlVOU0lHTkVEX0JZVEUpO1xuICAgICAgICB0aGlzLnBvc2l0aW9uQnVmZmVyID0gcm0uY3JlYXRlQnVmZmVyKG5hbWUgKyBcIi1wb3NcIiwgV2ViR0xSZW5kZXJpbmdDb250ZXh0LkFSUkFZX0JVRkZFUiwgV2ViR0xSZW5kZXJpbmdDb250ZXh0LlNUQVRJQ19EUkFXLCAzLCBXZWJHTFJlbmRlcmluZ0NvbnRleHQuRkxPQVQpO1xuICAgICAgICB0aGlzLm5vcm1hbEJ1ZmZlciA9IHJtLmNyZWF0ZUJ1ZmZlcihuYW1lICsgXCItbm9yXCIsIFdlYkdMUmVuZGVyaW5nQ29udGV4dC5BUlJBWV9CVUZGRVIsIFdlYkdMUmVuZGVyaW5nQ29udGV4dC5TVEFUSUNfRFJBVywgMywgV2ViR0xSZW5kZXJpbmdDb250ZXh0LkZMT0FUKTtcbiAgICAgICAgdGhpcy51dkJ1ZmZlciA9IHJtLmNyZWF0ZUJ1ZmZlcihuYW1lICsgXCItdXZcIiwgV2ViR0xSZW5kZXJpbmdDb250ZXh0LkFSUkFZX0JVRkZFUiwgV2ViR0xSZW5kZXJpbmdDb250ZXh0LlNUQVRJQ19EUkFXLCAyLCBXZWJHTFJlbmRlcmluZ0NvbnRleHQuRkxPQVQpO1xuICAgICAgICB0aGlzLl9fdXBkYXRlQnVmZmVycygpO1xuICAgIH1cblxuICAgIHByaXZhdGUgX2ZpcnN0OiBWZWN0b3IzID0gbmV3IFZlY3RvcjMoMCwgMSwgMCk7XG4gICAgcHJpdmF0ZSBfc2Vjb25kOiBWZWN0b3IzID0gbmV3IFZlY3RvcjMoMSwgMCwgMCk7XG4gICAgcHJpdmF0ZSBfdGhpcmQ6IFZlY3RvcjMgPSBuZXcgVmVjdG9yMygtMSwgMCwgMCk7XG5cbiAgICBwdWJsaWMgc2V0IEZpcnN0KHZlYzogVmVjdG9yMykge1xuICAgICAgICB0aGlzLl9maXJzdCA9IHZlYztcbiAgICAgICAgdGhpcy5fX3VwZGF0ZUJ1ZmZlcnMoKTtcbiAgICB9XG5cblxuICAgIHB1YmxpYyBzZXQgU2Vjb25kKHZlYzogVmVjdG9yMykge1xuICAgICAgICB0aGlzLl9zZWNvbmQgPSB2ZWM7XG4gICAgICAgIHRoaXMuX191cGRhdGVCdWZmZXJzKCk7XG4gICAgfVxuXG4gICAgcHVibGljIHNldCBUaGlyZCh2ZWM6IFZlY3RvcjMpIHtcbiAgICAgICAgdGhpcy5fdGhpcmQgPSB2ZWM7XG4gICAgICAgIHRoaXMuX191cGRhdGVCdWZmZXJzKCk7XG4gICAgfVxuXG4gICAgcHJvdGVjdGVkIF9fdXBkYXRlUG9zaXRpb25CdWZmZXIoKTogdm9pZCB7XG4gICAgICAgIHRoaXMucG9zaXRpb25CdWZmZXIudXBkYXRlKG5ldyBGbG9hdDMyQXJyYXkoW3RoaXMuX2ZpcnN0LlgsIHRoaXMuX2ZpcnN0LlksIHRoaXMuX2ZpcnN0LlosIHRoaXMuX3NlY29uZC5YLCB0aGlzLl9zZWNvbmQuWSwgdGhpcy5fc2Vjb25kLlosIHRoaXMuX3RoaXJkLlgsIHRoaXMuX3RoaXJkLlksIHRoaXMuX3RoaXJkLlpdKSwgOSk7XG4gICAgfVxuXG4gICAgcHJvdGVjdGVkIF9fdXBkYXRlTm9ybWFsQnVmZmVyKCk6IHZvaWQge1xuICAgICAgICB0aGlzLm5vcm1hbEJ1ZmZlci51cGRhdGUobmV3IEZsb2F0MzJBcnJheShbMCwgMCwgLTEsIDAsIDAsIC0xLCAwLCAwLCAtMV0pLCA5KTtcbiAgICB9XG5cbiAgICBwcm90ZWN0ZWQgX191cGRhdGVVdkJ1ZmZlcigpOiB2b2lkIHtcbiAgICAgICAgdGhpcy51dkJ1ZmZlci51cGRhdGUobmV3IEZsb2F0MzJBcnJheShbMC41LCAwLjUsIDEsIDAsIDAsIDBdKSwgNik7XG4gICAgfVxuXG4gICAgcHJvdGVjdGVkIF9fdXBkYXRlSW5kZXhCdWZmZXIoKTogdm9pZCB7XG4gICAgICAgIHRoaXMuaW5kZXhCdWZmZXIudXBkYXRlKG5ldyBVaW50OEFycmF5KFswLCAxLCAyXSksIDMpO1xuICAgIH1cblxuICAgIHByb3RlY3RlZCBfX3VwZGF0ZUJ1ZmZlcnMoKTogdm9pZCB7XG4gICAgICAgIHRoaXMuX191cGRhdGVQb3NpdGlvbkJ1ZmZlcigpO1xuICAgICAgICB0aGlzLl9fdXBkYXRlTm9ybWFsQnVmZmVyKCk7XG4gICAgICAgIHRoaXMuX191cGRhdGVVdkJ1ZmZlcigpO1xuICAgICAgICB0aGlzLl9fdXBkYXRlSW5kZXhCdWZmZXIoKTtcbiAgICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IFRyaWFuZ2xlR2VvbWV0cnk7XG4iXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0=

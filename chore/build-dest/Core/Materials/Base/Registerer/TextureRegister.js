import ContextComponents from "../../../../ContextComponents";
import JThreeContext from "../../../../JThreeContext";
const TextureRegister = (gl, pWrapper, matArg, uniforms) => {
    const rm = JThreeContext.getContextComponent(ContextComponents.ResourceManager);
    for (let key in uniforms) {
        const uniform = uniforms[key];
        if (uniform.variableType !== "sampler2D") {
            continue;
        }
        const sourceType = uniform.variableAnnotation["type"];
        const src = uniform.variableAnnotation["src"];
        if (!src) {
            continue;
        }
        switch (sourceType) {
            default:
                console.warn(`Unknown texture source type:${sourceType}. src will be interpreted as url`);
            case "url":
                // TODO implement this
                continue;
            case "id":
                pWrapper.uniformSampler(uniform.variableName, rm.getTexture(src), 7);
                continue;
        }
    }
};
export default TextureRegister;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkNvcmUvTWF0ZXJpYWxzL0Jhc2UvUmVnaXN0ZXJlci9UZXh0dXJlUmVnaXN0ZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ik9BQ08saUJBQWlCLE1BQU0sK0JBQStCO09BQ3RELGFBQWEsTUFBTSwyQkFBMkI7QUFJckQsTUFBTSxlQUFlLEdBQUcsQ0FBQyxFQUF5QixFQUFFLFFBQXdCLEVBQUUsTUFBOEIsRUFBRSxRQUFpRDtJQUMzSixNQUFNLEVBQUUsR0FBRyxhQUFhLENBQUMsbUJBQW1CLENBQWtCLGlCQUFpQixDQUFDLGVBQWUsQ0FBQyxDQUFDO0lBQ2pHLEdBQUcsQ0FBQyxDQUFDLElBQUksR0FBRyxJQUFJLFFBQVEsQ0FBQyxDQUFDLENBQUM7UUFDdkIsTUFBTSxPQUFPLEdBQUcsUUFBUSxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQzlCLEVBQUUsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxZQUFZLEtBQUssV0FBVyxDQUFDLENBQUMsQ0FBQztZQUFDLFFBQVEsQ0FBQztRQUFDLENBQUM7UUFDdkQsTUFBTSxVQUFVLEdBQUcsT0FBTyxDQUFDLGtCQUFrQixDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQ3RELE1BQU0sR0FBRyxHQUFHLE9BQU8sQ0FBQyxrQkFBa0IsQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUM5QyxFQUFFLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUM7WUFBQyxRQUFRLENBQUM7UUFBQyxDQUFDO1FBQ3ZCLE1BQU0sQ0FBQyxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUM7WUFDakI7Z0JBQ0ksT0FBTyxDQUFDLElBQUksQ0FBQywrQkFBK0IsVUFBVSxrQ0FBa0MsQ0FBQyxDQUFDO1lBQzlGLEtBQUssS0FBSztnQkFDTixzQkFBc0I7Z0JBQ3RCLFFBQVEsQ0FBQztZQUNiLEtBQUssSUFBSTtnQkFDTCxRQUFRLENBQUMsY0FBYyxDQUFDLE9BQU8sQ0FBQyxZQUFZLEVBQUUsRUFBRSxDQUFDLFVBQVUsQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztnQkFDckUsUUFBUSxDQUFDO1FBQ2pCLENBQUM7SUFDTCxDQUFDO0FBQ0wsQ0FBQyxDQUFDO0FBRUYsZUFBZSxlQUFlLENBQUMiLCJmaWxlIjoiQ29yZS9NYXRlcmlhbHMvQmFzZS9SZWdpc3RlcmVyL1RleHR1cmVSZWdpc3Rlci5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZXNvdXJjZU1hbmFnZXIgZnJvbSBcIi4uLy4uLy4uL1Jlc291cmNlTWFuYWdlclwiO1xuaW1wb3J0IENvbnRleHRDb21wb25lbnRzIGZyb20gXCIuLi8uLi8uLi8uLi9Db250ZXh0Q29tcG9uZW50c1wiO1xuaW1wb3J0IEpUaHJlZUNvbnRleHQgZnJvbSBcIi4uLy4uLy4uLy4uL0pUaHJlZUNvbnRleHRcIjtcbmltcG9ydCBQcm9ncmFtV3JhcHBlciBmcm9tIFwiLi4vLi4vLi4vUmVzb3VyY2VzL1Byb2dyYW0vUHJvZ3JhbVdyYXBwZXJcIjtcbmltcG9ydCBJVmFyaWFibGVEZXNjcmlwdGlvbiBmcm9tIFwiLi4vSVZhcmlhYmxlRGVzY3JpcHRpb25cIjtcbmltcG9ydCBJQXBwbHlNYXRlcmlhbEFyZ3VtZW50IGZyb20gXCIuLi9JQXBwbHlNYXRlcmlhbEFyZ3VtZW50XCI7XG5jb25zdCBUZXh0dXJlUmVnaXN0ZXIgPSAoZ2w6IFdlYkdMUmVuZGVyaW5nQ29udGV4dCwgcFdyYXBwZXI6IFByb2dyYW1XcmFwcGVyLCBtYXRBcmc6IElBcHBseU1hdGVyaWFsQXJndW1lbnQsIHVuaWZvcm1zOiB7IFtrZXk6IHN0cmluZ106IElWYXJpYWJsZURlc2NyaXB0aW9uIH0pID0+IHtcbiAgICBjb25zdCBybSA9IEpUaHJlZUNvbnRleHQuZ2V0Q29udGV4dENvbXBvbmVudDxSZXNvdXJjZU1hbmFnZXI+KENvbnRleHRDb21wb25lbnRzLlJlc291cmNlTWFuYWdlcik7XG4gICAgZm9yIChsZXQga2V5IGluIHVuaWZvcm1zKSB7XG4gICAgICAgIGNvbnN0IHVuaWZvcm0gPSB1bmlmb3Jtc1trZXldO1xuICAgICAgICBpZiAodW5pZm9ybS52YXJpYWJsZVR5cGUgIT09IFwic2FtcGxlcjJEXCIpIHsgY29udGludWU7IH1cbiAgICAgICAgY29uc3Qgc291cmNlVHlwZSA9IHVuaWZvcm0udmFyaWFibGVBbm5vdGF0aW9uW1widHlwZVwiXTtcbiAgICAgICAgY29uc3Qgc3JjID0gdW5pZm9ybS52YXJpYWJsZUFubm90YXRpb25bXCJzcmNcIl07XG4gICAgICAgIGlmICghc3JjKSB7IGNvbnRpbnVlOyB9XG4gICAgICAgIHN3aXRjaCAoc291cmNlVHlwZSkge1xuICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgICBjb25zb2xlLndhcm4oYFVua25vd24gdGV4dHVyZSBzb3VyY2UgdHlwZToke3NvdXJjZVR5cGV9LiBzcmMgd2lsbCBiZSBpbnRlcnByZXRlZCBhcyB1cmxgKTtcbiAgICAgICAgICAgIGNhc2UgXCJ1cmxcIjogLy8gVE9ETyBXSVBcbiAgICAgICAgICAgICAgICAvLyBUT0RPIGltcGxlbWVudCB0aGlzXG4gICAgICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgICBjYXNlIFwiaWRcIjpcbiAgICAgICAgICAgICAgICBwV3JhcHBlci51bmlmb3JtU2FtcGxlcih1bmlmb3JtLnZhcmlhYmxlTmFtZSwgcm0uZ2V0VGV4dHVyZShzcmMpLCA3KTtcbiAgICAgICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgfVxuICAgIH1cbn07XG5cbmV4cG9ydCBkZWZhdWx0IFRleHR1cmVSZWdpc3RlcjtcbiJdLCJzb3VyY2VSb290IjoiL3NvdXJjZS8ifQ==

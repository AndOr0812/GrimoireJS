import BufferTextureWrapper from "./BufferTextureWrapper";
import TextureBase from "./TextureBase";
/**
 * Buffer texture is a texture created from array programatically.
 */
class BufferTexture extends TextureBase {
    constructor(width, height, textureFormat, elementFormat, textureName) {
        super(textureName);
        this._width = width;
        this._height = height;
        this.__textureFormat = textureFormat;
        this.__elementFormat = elementFormat;
        if (this.__elementFormat === WebGLRenderingContext.FLOAT) {
            this.MinFilter = WebGLRenderingContext.NEAREST;
            this.MagFilter = WebGLRenderingContext.NEAREST;
        }
    }
    get Width() {
        return this._width;
    }
    get Height() {
        return this._height;
    }
    __createWrapperForCanvas(canvas) {
        return new BufferTextureWrapper(canvas, this);
    }
    resize(width, height) {
        if (this._width !== width || this._height !== height) {
            this._width = width;
            this._height = height;
            this.each(v => v.resize(width, height));
        }
    }
    updateTexture(buffer) {
        this.each(t => {
            t.updateTexture(buffer);
        });
    }
}
export default BufferTexture;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkNvcmUvUmVzb3VyY2VzL1RleHR1cmUvQnVmZmVyVGV4dHVyZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiT0FBTyxvQkFBb0IsTUFBTSx3QkFBd0I7T0FFbEQsV0FBVyxNQUFNLGVBQWU7QUFDdkM7O0dBRUc7QUFDSCw0QkFBNEIsV0FBVztJQWFyQyxZQUFZLEtBQWEsRUFBRSxNQUFjLEVBQUUsYUFBcUIsRUFBRSxhQUFxQixFQUFFLFdBQW1CO1FBQzFHLE1BQU0sV0FBVyxDQUFDLENBQUM7UUFDbkIsSUFBSSxDQUFDLE1BQU0sR0FBRyxLQUFLLENBQUM7UUFDcEIsSUFBSSxDQUFDLE9BQU8sR0FBRyxNQUFNLENBQUM7UUFDdEIsSUFBSSxDQUFDLGVBQWUsR0FBRyxhQUFhLENBQUM7UUFDckMsSUFBSSxDQUFDLGVBQWUsR0FBRyxhQUFhLENBQUM7UUFDckMsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLGVBQWUsS0FBSyxxQkFBcUIsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDO1lBQ3pELElBQUksQ0FBQyxTQUFTLEdBQUcscUJBQXFCLENBQUMsT0FBTyxDQUFDO1lBQy9DLElBQUksQ0FBQyxTQUFTLEdBQUcscUJBQXFCLENBQUMsT0FBTyxDQUFDO1FBQ2pELENBQUM7SUFDSCxDQUFDO0lBcEJELElBQVcsS0FBSztRQUNkLE1BQU0sQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDO0lBQ3JCLENBQUM7SUFJRCxJQUFXLE1BQU07UUFDZixNQUFNLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQztJQUN0QixDQUFDO0lBY1Msd0JBQXdCLENBQUMsTUFBYztRQUMvQyxNQUFNLENBQUMsSUFBSSxvQkFBb0IsQ0FBQyxNQUFNLEVBQUUsSUFBSSxDQUFDLENBQUM7SUFDaEQsQ0FBQztJQUVNLE1BQU0sQ0FBQyxLQUFhLEVBQUUsTUFBYztRQUN6QyxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsTUFBTSxLQUFLLEtBQUssSUFBSSxJQUFJLENBQUMsT0FBTyxLQUFLLE1BQU0sQ0FBQyxDQUFDLENBQUM7WUFDckQsSUFBSSxDQUFDLE1BQU0sR0FBRyxLQUFLLENBQUM7WUFDcEIsSUFBSSxDQUFDLE9BQU8sR0FBRyxNQUFNLENBQUM7WUFDdEIsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDLElBQTJCLENBQUUsQ0FBQyxNQUFNLENBQUMsS0FBSyxFQUFFLE1BQU0sQ0FBQyxDQUFDLENBQUM7UUFDbEUsQ0FBQztJQUNILENBQUM7SUFFTSxhQUFhLENBQUMsTUFBdUI7UUFDMUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO1lBQ2MsQ0FBRSxDQUFDLGFBQWEsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUNsRCxDQUFDLENBQUMsQ0FBQztJQUNMLENBQUM7QUFFSCxDQUFDO0FBRUQsZUFBZSxhQUFhLENBQUMiLCJmaWxlIjoiQ29yZS9SZXNvdXJjZXMvVGV4dHVyZS9CdWZmZXJUZXh0dXJlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEJ1ZmZlclRleHR1cmVXcmFwcGVyIGZyb20gXCIuL0J1ZmZlclRleHR1cmVXcmFwcGVyXCI7XG5pbXBvcnQgQ2FudmFzIGZyb20gXCIuLi8uLi9DYW52YXMvQ2FudmFzXCI7XG5pbXBvcnQgVGV4dHVyZUJhc2UgZnJvbSBcIi4vVGV4dHVyZUJhc2VcIjtcbi8qKlxuICogQnVmZmVyIHRleHR1cmUgaXMgYSB0ZXh0dXJlIGNyZWF0ZWQgZnJvbSBhcnJheSBwcm9ncmFtYXRpY2FsbHkuXG4gKi9cbmNsYXNzIEJ1ZmZlclRleHR1cmUgZXh0ZW5kcyBUZXh0dXJlQmFzZSB7XG4gIHByaXZhdGUgX3dpZHRoOiBudW1iZXI7XG5cbiAgcHVibGljIGdldCBXaWR0aCgpOiBudW1iZXIge1xuICAgIHJldHVybiB0aGlzLl93aWR0aDtcbiAgfVxuXG4gIHByaXZhdGUgX2hlaWdodDogbnVtYmVyO1xuXG4gIHB1YmxpYyBnZXQgSGVpZ2h0KCk6IG51bWJlciB7XG4gICAgcmV0dXJuIHRoaXMuX2hlaWdodDtcbiAgfVxuXG4gIGNvbnN0cnVjdG9yKHdpZHRoOiBudW1iZXIsIGhlaWdodDogbnVtYmVyLCB0ZXh0dXJlRm9ybWF0OiBudW1iZXIsIGVsZW1lbnRGb3JtYXQ6IG51bWJlciwgdGV4dHVyZU5hbWU6IHN0cmluZykge1xuICAgIHN1cGVyKHRleHR1cmVOYW1lKTtcbiAgICB0aGlzLl93aWR0aCA9IHdpZHRoO1xuICAgIHRoaXMuX2hlaWdodCA9IGhlaWdodDtcbiAgICB0aGlzLl9fdGV4dHVyZUZvcm1hdCA9IHRleHR1cmVGb3JtYXQ7XG4gICAgdGhpcy5fX2VsZW1lbnRGb3JtYXQgPSBlbGVtZW50Rm9ybWF0O1xuICAgIGlmICh0aGlzLl9fZWxlbWVudEZvcm1hdCA9PT0gV2ViR0xSZW5kZXJpbmdDb250ZXh0LkZMT0FUKSB7XG4gICAgICB0aGlzLk1pbkZpbHRlciA9IFdlYkdMUmVuZGVyaW5nQ29udGV4dC5ORUFSRVNUO1xuICAgICAgdGhpcy5NYWdGaWx0ZXIgPSBXZWJHTFJlbmRlcmluZ0NvbnRleHQuTkVBUkVTVDtcbiAgICB9XG4gIH1cblxuICBwcm90ZWN0ZWQgX19jcmVhdGVXcmFwcGVyRm9yQ2FudmFzKGNhbnZhczogQ2FudmFzKTogQnVmZmVyVGV4dHVyZVdyYXBwZXIge1xuICAgIHJldHVybiBuZXcgQnVmZmVyVGV4dHVyZVdyYXBwZXIoY2FudmFzLCB0aGlzKTtcbiAgfVxuXG4gIHB1YmxpYyByZXNpemUod2lkdGg6IG51bWJlciwgaGVpZ2h0OiBudW1iZXIpOiB2b2lkIHtcbiAgICBpZiAodGhpcy5fd2lkdGggIT09IHdpZHRoIHx8IHRoaXMuX2hlaWdodCAhPT0gaGVpZ2h0KSB7XG4gICAgICB0aGlzLl93aWR0aCA9IHdpZHRoO1xuICAgICAgdGhpcy5faGVpZ2h0ID0gaGVpZ2h0O1xuICAgICAgdGhpcy5lYWNoKHYgPT4gKDxCdWZmZXJUZXh0dXJlV3JhcHBlcj52KS5yZXNpemUod2lkdGgsIGhlaWdodCkpO1xuICAgIH1cbiAgfVxuXG4gIHB1YmxpYyB1cGRhdGVUZXh0dXJlKGJ1ZmZlcjogQXJyYXlCdWZmZXJWaWV3KTogdm9pZCB7XG4gICAgdGhpcy5lYWNoKHQgPT4ge1xuICAgICAgKDxCdWZmZXJUZXh0dXJlV3JhcHBlcj50KS51cGRhdGVUZXh0dXJlKGJ1ZmZlcik7XG4gICAgfSk7XG4gIH1cblxufVxuXG5leHBvcnQgZGVmYXVsdCBCdWZmZXJUZXh0dXJlO1xuIl0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9

import JThreeObject from "./Base/JThreeObject";
/**
* This class is root class perform as exception arguments in jThree.
*/
export class JThreeException extends JThreeObject {
    constructor(name, message) {
        super();
        this.name = name;
        this.message = message;
    }
    toString() {
        return `Exception:${super.toString()}\nName:${this.name}\nMessage:${this.message}`;
    }
}
export class InvalidArgumentException extends JThreeException {
    constructor(message) {
        super("Invalid argument was passed.", message);
    }
}
export class InvalidStringException extends JThreeException {
    constructor(message) {
        super("Invalid string was passed.", message);
    }
}
export class SingularMatrixException extends JThreeException {
    constructor(m) {
        super("Passed matrix is singular matrix", `passed matrix:${m.toString()}`);
    }
}
export class AbstractClassMethodCalledException extends JThreeException {
    constructor() {
        super("Invalid method was called.", "This method is abstract method, cant call by this instance");
    }
}
export class WebGLNotSupportedException extends JThreeException {
    constructor() {
        super("WebGL is not supported", "This browser is not supporting WebGL. Context generation for WebGL was failed.");
    }
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkV4Y2VwdGlvbnMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ik9BQU8sWUFBWSxNQUFNLHFCQUFxQjtBQUc5Qzs7RUFFRTtBQUNGLHFDQUFxQyxZQUFZO0lBQy9DLFlBQVksSUFBWSxFQUFFLE9BQWU7UUFDdkMsT0FBTyxDQUFDO1FBQ1IsSUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUM7UUFDakIsSUFBSSxDQUFDLE9BQU8sR0FBRyxPQUFPLENBQUM7SUFDekIsQ0FBQztJQUtNLFFBQVE7UUFDYixNQUFNLENBQUMsYUFBYSxLQUFLLENBQUMsUUFBUSxFQUFHLFVBQVUsSUFBSSxDQUFDLElBQUksYUFBYSxJQUFJLENBQUMsT0FBTyxFQUFFLENBQUM7SUFDdEYsQ0FBQztBQUNILENBQUM7QUFFRCw4Q0FBOEMsZUFBZTtJQUMzRCxZQUFZLE9BQWU7UUFDekIsTUFBTSw4QkFBOEIsRUFBRSxPQUFPLENBQUMsQ0FBQztJQUNqRCxDQUFDO0FBQ0gsQ0FBQztBQUVELDRDQUE0QyxlQUFlO0lBQ3pELFlBQVksT0FBZTtRQUN6QixNQUFNLDRCQUE0QixFQUFFLE9BQU8sQ0FBQyxDQUFDO0lBQy9DLENBQUM7QUFDSCxDQUFDO0FBRUQsNkNBQTZDLGVBQWU7SUFDMUQsWUFBWSxDQUFTO1FBQ25CLE1BQU0sa0NBQWtDLEVBQUUsaUJBQWlCLENBQUMsQ0FBQyxRQUFRLEVBQUcsRUFBRSxDQUFDLENBQUM7SUFDOUUsQ0FBQztBQUNILENBQUM7QUFFRCx3REFBd0QsZUFBZTtJQUNyRTtRQUNFLE1BQU0sNEJBQTRCLEVBQUUsNERBQTRELENBQUMsQ0FBQztJQUNwRyxDQUFDO0FBQ0gsQ0FBQztBQUVELGdEQUFnRCxlQUFlO0lBQzdEO1FBQ0UsTUFBTSx3QkFBd0IsRUFBRSxnRkFBZ0YsQ0FBQyxDQUFDO0lBQ3BILENBQUM7QUFDSCxDQUFDO0FBQUEiLCJmaWxlIjoiRXhjZXB0aW9ucy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBKVGhyZWVPYmplY3QgZnJvbSBcIi4vQmFzZS9KVGhyZWVPYmplY3RcIjtcbmltcG9ydCBNYXRyaXggZnJvbSBcIi4vTWF0aC9NYXRyaXhcIjtcblxuLyoqXG4qIFRoaXMgY2xhc3MgaXMgcm9vdCBjbGFzcyBwZXJmb3JtIGFzIGV4Y2VwdGlvbiBhcmd1bWVudHMgaW4galRocmVlLlxuKi9cbmV4cG9ydCBjbGFzcyBKVGhyZWVFeGNlcHRpb24gZXh0ZW5kcyBKVGhyZWVPYmplY3QgaW1wbGVtZW50cyBFcnJvciB7XG4gIGNvbnN0cnVjdG9yKG5hbWU6IHN0cmluZywgbWVzc2FnZTogc3RyaW5nKSB7XG4gICAgc3VwZXIoKTtcbiAgICB0aGlzLm5hbWUgPSBuYW1lO1xuICAgIHRoaXMubWVzc2FnZSA9IG1lc3NhZ2U7XG4gIH1cblxuICBwdWJsaWMgbmFtZTogc3RyaW5nO1xuICBwdWJsaWMgbWVzc2FnZTogc3RyaW5nO1xuXG4gIHB1YmxpYyB0b1N0cmluZygpOiBzdHJpbmcge1xuICAgIHJldHVybiBgRXhjZXB0aW9uOiR7c3VwZXIudG9TdHJpbmcoKSB9XFxuTmFtZToke3RoaXMubmFtZX1cXG5NZXNzYWdlOiR7dGhpcy5tZXNzYWdlfWA7XG4gIH1cbn1cblxuZXhwb3J0IGNsYXNzIEludmFsaWRBcmd1bWVudEV4Y2VwdGlvbiBleHRlbmRzIEpUaHJlZUV4Y2VwdGlvbiB7XG4gIGNvbnN0cnVjdG9yKG1lc3NhZ2U6IHN0cmluZykge1xuICAgIHN1cGVyKFwiSW52YWxpZCBhcmd1bWVudCB3YXMgcGFzc2VkLlwiLCBtZXNzYWdlKTtcbiAgfVxufVxuXG5leHBvcnQgY2xhc3MgSW52YWxpZFN0cmluZ0V4Y2VwdGlvbiBleHRlbmRzIEpUaHJlZUV4Y2VwdGlvbiB7XG4gIGNvbnN0cnVjdG9yKG1lc3NhZ2U6IHN0cmluZykge1xuICAgIHN1cGVyKFwiSW52YWxpZCBzdHJpbmcgd2FzIHBhc3NlZC5cIiwgbWVzc2FnZSk7XG4gIH1cbn1cblxuZXhwb3J0IGNsYXNzIFNpbmd1bGFyTWF0cml4RXhjZXB0aW9uIGV4dGVuZHMgSlRocmVlRXhjZXB0aW9uIHtcbiAgY29uc3RydWN0b3IobTogTWF0cml4KSB7XG4gICAgc3VwZXIoXCJQYXNzZWQgbWF0cml4IGlzIHNpbmd1bGFyIG1hdHJpeFwiLCBgcGFzc2VkIG1hdHJpeDoke20udG9TdHJpbmcoKSB9YCk7XG4gIH1cbn1cblxuZXhwb3J0IGNsYXNzIEFic3RyYWN0Q2xhc3NNZXRob2RDYWxsZWRFeGNlcHRpb24gZXh0ZW5kcyBKVGhyZWVFeGNlcHRpb24ge1xuICBjb25zdHJ1Y3RvcigpIHtcbiAgICBzdXBlcihcIkludmFsaWQgbWV0aG9kIHdhcyBjYWxsZWQuXCIsIFwiVGhpcyBtZXRob2QgaXMgYWJzdHJhY3QgbWV0aG9kLCBjYW50IGNhbGwgYnkgdGhpcyBpbnN0YW5jZVwiKTtcbiAgfVxufVxuXG5leHBvcnQgY2xhc3MgV2ViR0xOb3RTdXBwb3J0ZWRFeGNlcHRpb24gZXh0ZW5kcyBKVGhyZWVFeGNlcHRpb24ge1xuICBjb25zdHJ1Y3RvcigpIHtcbiAgICBzdXBlcihcIldlYkdMIGlzIG5vdCBzdXBwb3J0ZWRcIiwgXCJUaGlzIGJyb3dzZXIgaXMgbm90IHN1cHBvcnRpbmcgV2ViR0wuIENvbnRleHQgZ2VuZXJhdGlvbiBmb3IgV2ViR0wgd2FzIGZhaWxlZC5cIik7XG4gIH1cbn1cbiJdLCJzb3VyY2VSb290IjoiL3NvdXJjZS8ifQ==

import J3ObjectBase from "../J3ObjectBase";
import CoreRelatedNodeBase from "../../Goml/CoreRelatedNodeBase";
import isNumber from "lodash.isnumber";
import isUndefiend from "lodash.isundefined";
class GomlNodeMethods extends J3ObjectBase {
    get(argu) {
        switch (true) {
            case (isNumber(argu)):
                return this[argu];
            case (isUndefiend(argu)):
                return this.__getArray();
            default:
                throw new Error("Argument type is not correct");
        }
    }
    getObj(argu) {
        switch (true) {
            case (isNumber(argu)):
                const node = this[argu];
                return node instanceof CoreRelatedNodeBase ? node.target : null;
            case (isUndefiend(argu)):
                return this.__getArray().map((node) => {
                    return node instanceof CoreRelatedNodeBase ? node.target : null;
                });
            default:
                throw new Error("Argument type is not correct");
        }
    }
    index(argu) {
        throw new Error("Not implemented yet");
    }
}
export default GomlNodeMethods;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkludGVyZmFjZS9NaXNjZWxsYW5lb3VzL0dvbWxOb2RlTWV0aG9kcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiT0FDTyxZQUFZLE1BQU0saUJBQWlCO09BRW5DLG1CQUFtQixNQUFNLGdDQUFnQztPQUN6RCxRQUFRLE1BQU0saUJBQWlCO09BQy9CLFdBQVcsTUFBTSxvQkFBb0I7QUFFNUMsOEJBQThCLFlBQVk7SUFHakMsR0FBRyxDQUFDLElBQWE7UUFDdEIsTUFBTSxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQztZQUNiLEtBQUssQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLENBQUM7Z0JBQ25CLE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7WUFDcEIsS0FBSyxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsQ0FBQztnQkFDdEIsTUFBTSxDQUFDLElBQUksQ0FBQyxVQUFVLEVBQUUsQ0FBQztZQUMzQjtnQkFDRSxNQUFNLElBQUksS0FBSyxDQUFDLDhCQUE4QixDQUFDLENBQUM7UUFDcEQsQ0FBQztJQUNILENBQUM7SUFJTSxNQUFNLENBQUksSUFBYTtRQUM1QixNQUFNLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO1lBQ2IsS0FBSyxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsQ0FBQztnQkFDbkIsTUFBTSxJQUFJLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO2dCQUN4QixNQUFNLENBQUMsSUFBSSxZQUFZLG1CQUFtQixHQUE0QixJQUFLLENBQUMsTUFBTSxHQUFHLElBQUksQ0FBQztZQUM1RixLQUFLLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxDQUFDO2dCQUN0QixNQUFNLENBQUMsSUFBSSxDQUFDLFVBQVUsRUFBRSxDQUFDLEdBQUcsQ0FBQyxDQUFDLElBQUk7b0JBQ2hDLE1BQU0sQ0FBQyxJQUFJLFlBQVksbUJBQW1CLEdBQTRCLElBQUssQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDO2dCQUM1RixDQUFDLENBQUMsQ0FBQztZQUNMO2dCQUNFLE1BQU0sSUFBSSxLQUFLLENBQUMsOEJBQThCLENBQUMsQ0FBQztRQUNwRCxDQUFDO0lBQ0gsQ0FBQztJQU1NLEtBQUssQ0FBQyxJQUFVO1FBQ3JCLE1BQU0sSUFBSSxLQUFLLENBQUMscUJBQXFCLENBQUMsQ0FBQztJQUN6QyxDQUFDO0FBQ0gsQ0FBQztBQUVELGVBQWUsZUFBZSxDQUFDIiwiZmlsZSI6IkludGVyZmFjZS9NaXNjZWxsYW5lb3VzL0dvbWxOb2RlTWV0aG9kcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBKM09iamVjdCBmcm9tIFwiLi4vSjNPYmplY3RcIjtcbmltcG9ydCBKM09iamVjdEJhc2UgZnJvbSBcIi4uL0ozT2JqZWN0QmFzZVwiO1xuaW1wb3J0IEdvbWxUcmVlTm9kZUJhc2UgZnJvbSBcIi4uLy4uL0dvbWwvR29tbFRyZWVOb2RlQmFzZVwiO1xuaW1wb3J0IENvcmVSZWxhdGVkTm9kZUJhc2UgZnJvbSBcIi4uLy4uL0dvbWwvQ29yZVJlbGF0ZWROb2RlQmFzZVwiO1xuaW1wb3J0IGlzTnVtYmVyIGZyb20gXCJsb2Rhc2guaXNudW1iZXJcIjtcbmltcG9ydCBpc1VuZGVmaWVuZCBmcm9tIFwibG9kYXNoLmlzdW5kZWZpbmVkXCI7XG5cbmNsYXNzIEdvbWxOb2RlTWV0aG9kcyBleHRlbmRzIEozT2JqZWN0QmFzZSB7XG4gIHB1YmxpYyBnZXQoKTogR29tbFRyZWVOb2RlQmFzZVtdO1xuICBwdWJsaWMgZ2V0KGluZGV4OiBudW1iZXIpOiBHb21sVHJlZU5vZGVCYXNlO1xuICBwdWJsaWMgZ2V0KGFyZ3U/OiBudW1iZXIpOiBhbnkge1xuICAgIHN3aXRjaCAodHJ1ZSkge1xuICAgICAgY2FzZSAoaXNOdW1iZXIoYXJndSkpOlxuICAgICAgICByZXR1cm4gdGhpc1thcmd1XTtcbiAgICAgIGNhc2UgKGlzVW5kZWZpZW5kKGFyZ3UpKTpcbiAgICAgICAgcmV0dXJuIHRoaXMuX19nZXRBcnJheSgpO1xuICAgICAgZGVmYXVsdDpcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiQXJndW1lbnQgdHlwZSBpcyBub3QgY29ycmVjdFwiKTtcbiAgICB9XG4gIH1cblxuICBwdWJsaWMgZ2V0T2JqPFQ+KCk6IFRbXTtcbiAgcHVibGljIGdldE9iajxUPihpbmRleDogbnVtYmVyKTogVDtcbiAgcHVibGljIGdldE9iajxUPihhcmd1PzogbnVtYmVyKTogYW55IHtcbiAgICBzd2l0Y2ggKHRydWUpIHtcbiAgICAgIGNhc2UgKGlzTnVtYmVyKGFyZ3UpKTpcbiAgICAgICAgY29uc3Qgbm9kZSA9IHRoaXNbYXJndV07XG4gICAgICAgIHJldHVybiBub2RlIGluc3RhbmNlb2YgQ29yZVJlbGF0ZWROb2RlQmFzZSA/ICg8Q29yZVJlbGF0ZWROb2RlQmFzZTxUPj5ub2RlKS50YXJnZXQgOiBudWxsO1xuICAgICAgY2FzZSAoaXNVbmRlZmllbmQoYXJndSkpOlxuICAgICAgICByZXR1cm4gdGhpcy5fX2dldEFycmF5KCkubWFwKChub2RlKSA9PiB7XG4gICAgICAgICAgcmV0dXJuIG5vZGUgaW5zdGFuY2VvZiBDb3JlUmVsYXRlZE5vZGVCYXNlID8gKDxDb3JlUmVsYXRlZE5vZGVCYXNlPFQ+Pm5vZGUpLnRhcmdldCA6IG51bGw7XG4gICAgICAgIH0pO1xuICAgICAgZGVmYXVsdDpcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiQXJndW1lbnQgdHlwZSBpcyBub3QgY29ycmVjdFwiKTtcbiAgICB9XG4gIH1cblxuICBwdWJsaWMgaW5kZXgoKTogbnVtYmVyO1xuICBwdWJsaWMgaW5kZXgoc2VsZWN0b3I6IHN0cmluZyk6IG51bWJlcjtcbiAgcHVibGljIGluZGV4KG5vZGU6IEdvbWxUcmVlTm9kZUJhc2UpOiBudW1iZXI7XG4gIHB1YmxpYyBpbmRleChqM29iajogSjNPYmplY3QpOiBudW1iZXI7XG4gIHB1YmxpYyBpbmRleChhcmd1PzogYW55KTogbnVtYmVyIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJOb3QgaW1wbGVtZW50ZWQgeWV0XCIpO1xuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IEdvbWxOb2RlTWV0aG9kcztcbiJdLCJzb3VyY2VSb290IjoiL3NvdXJjZS8ifQ==

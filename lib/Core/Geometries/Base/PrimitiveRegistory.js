import ConeGeometry from "../ConeGeometry";
import CylinderGeometry from "../CylinderGeometry";
import CubeGeometry from "../CubeGeometry";
import SphereGeometry from "../SphereGeometry";
import QuadGeometry from "../QuadGeometry";
import ContextComponents from "../../../ContextComponents";
class PrimitiveRegistory {
    constructor() {
        /**
         * Registered primitives
         */
        this._primitives = {};
    }
    getContextComponentIndex() {
        return ContextComponents.PrimitiveRegistory;
    }
    registerDefaultPrimitives() {
        this.registerPrimitive("quad", new QuadGeometry("quad"));
        this.registerPrimitive("sphere", new SphereGeometry("sphere"));
        this.registerPrimitive("cube", new CubeGeometry("cube"));
        this.registerPrimitive("cylinder", new CylinderGeometry("cylinder"));
        this.registerPrimitive("cone", new ConeGeometry("cone"));
    }
    registerPrimitive(key, geo) {
        this._primitives[key] = geo;
    }
    deregisterPrimitive(key) {
        delete this._primitives[key];
    }
    getPrimitive(key) {
        return this._primitives[key];
    }
}
export default PrimitiveRegistory;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkNvcmUvR2VvbWV0cmllcy9CYXNlL1ByaW1pdGl2ZVJlZ2lzdG9yeS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiT0FBTyxZQUFZLE1BQU0saUJBQWlCO09BQ25DLGdCQUFnQixNQUFNLHFCQUFxQjtPQUMzQyxZQUFZLE1BQU0saUJBQWlCO09BQ25DLGNBQWMsTUFBTSxtQkFBbUI7T0FDdkMsWUFBWSxNQUFNLGlCQUFpQjtPQUVuQyxpQkFBaUIsTUFBTSw0QkFBNEI7QUFFMUQ7SUFBQTtRQUNFOztXQUVHO1FBQ0ssZ0JBQVcsR0FBMEMsRUFBRSxDQUFDO0lBeUJsRSxDQUFDO0lBdkJRLHdCQUF3QjtRQUM3QixNQUFNLENBQUMsaUJBQWlCLENBQUMsa0JBQWtCLENBQUM7SUFDOUMsQ0FBQztJQUVNLHlCQUF5QjtRQUM5QixJQUFJLENBQUMsaUJBQWlCLENBQUMsTUFBTSxFQUFFLElBQUksWUFBWSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUM7UUFDekQsSUFBSSxDQUFDLGlCQUFpQixDQUFDLFFBQVEsRUFBRSxJQUFJLGNBQWMsQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDO1FBQy9ELElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxNQUFNLEVBQUUsSUFBSSxZQUFZLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQztRQUN6RCxJQUFJLENBQUMsaUJBQWlCLENBQUMsVUFBVSxFQUFFLElBQUksZ0JBQWdCLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQztRQUNyRSxJQUFJLENBQUMsaUJBQWlCLENBQUMsTUFBTSxFQUFFLElBQUksWUFBWSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUM7SUFDM0QsQ0FBQztJQUVNLGlCQUFpQixDQUFDLEdBQVcsRUFBRSxHQUFhO1FBQ2pELElBQUksQ0FBQyxXQUFXLENBQUMsR0FBRyxDQUFDLEdBQUcsR0FBRyxDQUFDO0lBQzlCLENBQUM7SUFFTSxtQkFBbUIsQ0FBQyxHQUFXO1FBQ3BDLE9BQU8sSUFBSSxDQUFDLFdBQVcsQ0FBQyxHQUFHLENBQUMsQ0FBQztJQUMvQixDQUFDO0lBRU0sWUFBWSxDQUFDLEdBQVc7UUFDN0IsTUFBTSxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsR0FBRyxDQUFDLENBQUM7SUFDL0IsQ0FBQztBQUNILENBQUM7QUFDRCxlQUFlLGtCQUFrQixDQUFDIiwiZmlsZSI6IkNvcmUvR2VvbWV0cmllcy9CYXNlL1ByaW1pdGl2ZVJlZ2lzdG9yeS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBDb25lR2VvbWV0cnkgZnJvbSBcIi4uL0NvbmVHZW9tZXRyeVwiO1xuaW1wb3J0IEN5bGluZGVyR2VvbWV0cnkgZnJvbSBcIi4uL0N5bGluZGVyR2VvbWV0cnlcIjtcbmltcG9ydCBDdWJlR2VvbWV0cnkgZnJvbSBcIi4uL0N1YmVHZW9tZXRyeVwiO1xuaW1wb3J0IFNwaGVyZUdlb21ldHJ5IGZyb20gXCIuLi9TcGhlcmVHZW9tZXRyeVwiO1xuaW1wb3J0IFF1YWRHZW9tZXRyeSBmcm9tIFwiLi4vUXVhZEdlb21ldHJ5XCI7XG5pbXBvcnQgR2VvbWV0cnkgZnJvbSBcIi4vR2VvbWV0cnlcIjtcbmltcG9ydCBDb250ZXh0Q29tcG9uZW50cyBmcm9tIFwiLi4vLi4vLi4vQ29udGV4dENvbXBvbmVudHNcIjtcbmltcG9ydCBJQ29udGV4dENvbXBvbmVudCBmcm9tIFwiLi4vLi4vLi4vSUNvbnRleHRDb21wb25lbnRcIjtcbmNsYXNzIFByaW1pdGl2ZVJlZ2lzdG9yeSBpbXBsZW1lbnRzIElDb250ZXh0Q29tcG9uZW50IHtcbiAgLyoqXG4gICAqIFJlZ2lzdGVyZWQgcHJpbWl0aXZlc1xuICAgKi9cbiAgcHJpdmF0ZSBfcHJpbWl0aXZlczogeyBbcHJpbWl0aXZlTmFtZTogc3RyaW5nXTogR2VvbWV0cnkgfSA9IHt9O1xuXG4gIHB1YmxpYyBnZXRDb250ZXh0Q29tcG9uZW50SW5kZXgoKTogbnVtYmVyIHtcbiAgICByZXR1cm4gQ29udGV4dENvbXBvbmVudHMuUHJpbWl0aXZlUmVnaXN0b3J5O1xuICB9XG5cbiAgcHVibGljIHJlZ2lzdGVyRGVmYXVsdFByaW1pdGl2ZXMoKTogdm9pZCB7XG4gICAgdGhpcy5yZWdpc3RlclByaW1pdGl2ZShcInF1YWRcIiwgbmV3IFF1YWRHZW9tZXRyeShcInF1YWRcIikpO1xuICAgIHRoaXMucmVnaXN0ZXJQcmltaXRpdmUoXCJzcGhlcmVcIiwgbmV3IFNwaGVyZUdlb21ldHJ5KFwic3BoZXJlXCIpKTtcbiAgICB0aGlzLnJlZ2lzdGVyUHJpbWl0aXZlKFwiY3ViZVwiLCBuZXcgQ3ViZUdlb21ldHJ5KFwiY3ViZVwiKSk7XG4gICAgdGhpcy5yZWdpc3RlclByaW1pdGl2ZShcImN5bGluZGVyXCIsIG5ldyBDeWxpbmRlckdlb21ldHJ5KFwiY3lsaW5kZXJcIikpO1xuICAgIHRoaXMucmVnaXN0ZXJQcmltaXRpdmUoXCJjb25lXCIsIG5ldyBDb25lR2VvbWV0cnkoXCJjb25lXCIpKTtcbiAgfVxuXG4gIHB1YmxpYyByZWdpc3RlclByaW1pdGl2ZShrZXk6IHN0cmluZywgZ2VvOiBHZW9tZXRyeSk6IHZvaWQge1xuICAgIHRoaXMuX3ByaW1pdGl2ZXNba2V5XSA9IGdlbztcbiAgfVxuXG4gIHB1YmxpYyBkZXJlZ2lzdGVyUHJpbWl0aXZlKGtleTogc3RyaW5nKTogdm9pZCB7XG4gICAgZGVsZXRlIHRoaXMuX3ByaW1pdGl2ZXNba2V5XTtcbiAgfVxuXG4gIHB1YmxpYyBnZXRQcmltaXRpdmUoa2V5OiBzdHJpbmcpOiBHZW9tZXRyeSB7XG4gICAgcmV0dXJuIHRoaXMuX3ByaW1pdGl2ZXNba2V5XTtcbiAgfVxufVxuZXhwb3J0IGRlZmF1bHQgUHJpbWl0aXZlUmVnaXN0b3J5O1xuIl0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9

import TextureWrapperBase from "./TextureWrapperBase";
class TextureWrapper extends TextureWrapperBase {
    constructor(canvas, parent) {
        super(canvas, parent);
    }
    init(isChanged) {
        if (this.Initialized && !isChanged) {
            return;
        }
        if (this.TargetTexture == null) {
            this.__setTargetTexture(this.GL.createTexture());
        }
        this.updateTexture();
        this.GL.bindTexture(WebGLRenderingContext.TEXTURE_2D, null);
        this.__setInitialized();
    }
    updateTexture() {
        const parentTexture = this.Parent;
        this.GL.bindTexture(WebGLRenderingContext.TEXTURE_2D, this.TargetTexture);
        if (parentTexture.ImageSource == null) {
            this.GL.texImage2D(WebGLRenderingContext.TEXTURE_2D, 0, WebGLRenderingContext.RGBA, 1, 1, 0, WebGLRenderingContext.RGBA, WebGLRenderingContext.UNSIGNED_BYTE, TextureWrapperBase.__altTextureBuffer);
        }
        else {
            this.preTextureUpload();
            this.GL.texImage2D(WebGLRenderingContext.TEXTURE_2D, 0, WebGLRenderingContext.RGBA, WebGLRenderingContext.RGBA, WebGLRenderingContext.UNSIGNED_BYTE, parentTexture.ImageSource);
        }
    }
}
export default TextureWrapper;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkNvcmUvUmVzb3VyY2VzL1RleHR1cmUvVGV4dHVyZVdyYXBwZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ik9BQU8sa0JBQWtCLE1BQU0sc0JBQXNCO0FBR3JELDZCQUE2QixrQkFBa0I7SUFDN0MsWUFBWSxNQUFjLEVBQUUsTUFBZTtRQUN6QyxNQUFNLE1BQU0sRUFBRSxNQUFNLENBQUMsQ0FBQztJQUN4QixDQUFDO0lBRU0sSUFBSSxDQUFDLFNBQW1CO1FBQzdCLEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxXQUFXLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDO1lBQ25DLE1BQU0sQ0FBQztRQUNULENBQUM7UUFDRCxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsYUFBYSxJQUFJLElBQUksQ0FBQyxDQUFDLENBQUM7WUFDL0IsSUFBSSxDQUFDLGtCQUFrQixDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsYUFBYSxFQUFFLENBQUMsQ0FBQztRQUNuRCxDQUFDO1FBQ0QsSUFBSSxDQUFDLGFBQWEsRUFBRSxDQUFDO1FBQ3JCLElBQUksQ0FBQyxFQUFFLENBQUMsV0FBVyxDQUFDLHFCQUFxQixDQUFDLFVBQVUsRUFBRSxJQUFJLENBQUMsQ0FBQztRQUM1RCxJQUFJLENBQUMsZ0JBQWdCLEVBQUUsQ0FBQztJQUMxQixDQUFDO0lBRU0sYUFBYTtRQUNsQixNQUFNLGFBQWEsR0FBRyxJQUFJLENBQUMsTUFBaUIsQ0FBQztRQUM3QyxJQUFJLENBQUMsRUFBRSxDQUFDLFdBQVcsQ0FBQyxxQkFBcUIsQ0FBQyxVQUFVLEVBQUUsSUFBSSxDQUFDLGFBQWEsQ0FBQyxDQUFDO1FBQzFFLEVBQUUsQ0FBQyxDQUFDLGFBQWEsQ0FBQyxXQUFXLElBQUksSUFBSSxDQUFDLENBQUMsQ0FBQztZQUN0QyxJQUFJLENBQUMsRUFBRSxDQUFDLFVBQVUsQ0FBQyxxQkFBcUIsQ0FBQyxVQUFVLEVBQUUsQ0FBQyxFQUFFLHFCQUFxQixDQUFDLElBQUksRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxxQkFBcUIsQ0FBQyxJQUFJLEVBQUUscUJBQXFCLENBQUMsYUFBYSxFQUFFLGtCQUFrQixDQUFDLGtCQUFrQixDQUFDLENBQUM7UUFDdk0sQ0FBQztRQUFDLElBQUksQ0FBQyxDQUFDO1lBQ04sSUFBSSxDQUFDLGdCQUFnQixFQUFFLENBQUM7WUFDeEIsSUFBSSxDQUFDLEVBQUUsQ0FBQyxVQUFVLENBQUMscUJBQXFCLENBQUMsVUFBVSxFQUFFLENBQUMsRUFBRSxxQkFBcUIsQ0FBQyxJQUFJLEVBQUUscUJBQXFCLENBQUMsSUFBSSxFQUFFLHFCQUFxQixDQUFDLGFBQWEsRUFBRSxhQUFhLENBQUMsV0FBd0IsQ0FBQyxDQUFDO1FBQy9MLENBQUM7SUFDSCxDQUFDO0FBRUgsQ0FBQztBQUdELGVBQWUsY0FBYyxDQUFDIiwiZmlsZSI6IkNvcmUvUmVzb3VyY2VzL1RleHR1cmUvVGV4dHVyZVdyYXBwZXIuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgVGV4dHVyZVdyYXBwZXJCYXNlIGZyb20gXCIuL1RleHR1cmVXcmFwcGVyQmFzZVwiO1xuaW1wb3J0IENhbnZhcyBmcm9tIFwiLi4vLi4vQ2FudmFzL0NhbnZhc1wiO1xuaW1wb3J0IFRleHR1cmUgZnJvbSBcIi4vVGV4dHVyZVwiO1xuY2xhc3MgVGV4dHVyZVdyYXBwZXIgZXh0ZW5kcyBUZXh0dXJlV3JhcHBlckJhc2Uge1xuICBjb25zdHJ1Y3RvcihjYW52YXM6IENhbnZhcywgcGFyZW50OiBUZXh0dXJlKSB7XG4gICAgc3VwZXIoY2FudmFzLCBwYXJlbnQpO1xuICB9XG5cbiAgcHVibGljIGluaXQoaXNDaGFuZ2VkPzogYm9vbGVhbik6IHZvaWQge1xuICAgIGlmICh0aGlzLkluaXRpYWxpemVkICYmICFpc0NoYW5nZWQpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgaWYgKHRoaXMuVGFyZ2V0VGV4dHVyZSA9PSBudWxsKSB7XG4gICAgICB0aGlzLl9fc2V0VGFyZ2V0VGV4dHVyZSh0aGlzLkdMLmNyZWF0ZVRleHR1cmUoKSk7XG4gICAgfVxuICAgIHRoaXMudXBkYXRlVGV4dHVyZSgpO1xuICAgIHRoaXMuR0wuYmluZFRleHR1cmUoV2ViR0xSZW5kZXJpbmdDb250ZXh0LlRFWFRVUkVfMkQsIG51bGwpO1xuICAgIHRoaXMuX19zZXRJbml0aWFsaXplZCgpO1xuICB9XG5cbiAgcHVibGljIHVwZGF0ZVRleHR1cmUoKTogdm9pZCB7XG4gICAgY29uc3QgcGFyZW50VGV4dHVyZSA9IHRoaXMuUGFyZW50IGFzIFRleHR1cmU7XG4gICAgdGhpcy5HTC5iaW5kVGV4dHVyZShXZWJHTFJlbmRlcmluZ0NvbnRleHQuVEVYVFVSRV8yRCwgdGhpcy5UYXJnZXRUZXh0dXJlKTtcbiAgICBpZiAocGFyZW50VGV4dHVyZS5JbWFnZVNvdXJjZSA9PSBudWxsKSB7XG4gICAgICB0aGlzLkdMLnRleEltYWdlMkQoV2ViR0xSZW5kZXJpbmdDb250ZXh0LlRFWFRVUkVfMkQsIDAsIFdlYkdMUmVuZGVyaW5nQ29udGV4dC5SR0JBLCAxLCAxLCAwLCBXZWJHTFJlbmRlcmluZ0NvbnRleHQuUkdCQSwgV2ViR0xSZW5kZXJpbmdDb250ZXh0LlVOU0lHTkVEX0JZVEUsIFRleHR1cmVXcmFwcGVyQmFzZS5fX2FsdFRleHR1cmVCdWZmZXIpO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLnByZVRleHR1cmVVcGxvYWQoKTtcbiAgICAgIHRoaXMuR0wudGV4SW1hZ2UyRChXZWJHTFJlbmRlcmluZ0NvbnRleHQuVEVYVFVSRV8yRCwgMCwgV2ViR0xSZW5kZXJpbmdDb250ZXh0LlJHQkEsIFdlYkdMUmVuZGVyaW5nQ29udGV4dC5SR0JBLCBXZWJHTFJlbmRlcmluZ0NvbnRleHQuVU5TSUdORURfQllURSwgcGFyZW50VGV4dHVyZS5JbWFnZVNvdXJjZSBhcyBJbWFnZURhdGEpO1xuICAgIH1cbiAgfVxuXG59XG5cblxuZXhwb3J0IGRlZmF1bHQgVGV4dHVyZVdyYXBwZXI7XG4iXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0=

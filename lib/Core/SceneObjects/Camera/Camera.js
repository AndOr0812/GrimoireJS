import SceneObject from "../SceneObject";
import Matrix from "../../../Math/Matrix";
import { mat4 } from "gl-matrix";
import PointList from "../../../Math/PointList";
/**
 * Basement class of Camera. These class related to camera are one of SceneObject in jThree.
 */
class Camera extends SceneObject {
    constructor(...args) {
        super(...args);
        this.viewProjectionMatrix = new Matrix();
        this.viewProjectionInvMatrix = new Matrix();
        /**
         * View frustum vertex points in World space
         */
        this.frustumPoints = new PointList();
        this.viewMatrix = new Matrix();
        this.projectionMatrix = new Matrix();
        this.invProjectionMatrix = new Matrix();
    }
    get Far() {
        return 0;
    }
    get Near() {
        return 0;
    }
    __updateViewProjectionMatrix() {
        mat4.mul(this.viewProjectionMatrix.rawElements, this.projectionMatrix.rawElements, this.viewMatrix.rawElements);
        mat4.invert(this.viewProjectionInvMatrix.rawElements, this.viewProjectionMatrix.rawElements);
        PointList.initializeWithCube(this.frustumPoints);
        this.frustumPoints.transform(this.viewProjectionInvMatrix);
    }
    update() {
        super.update();
    }
    onParentSceneChanged() {
        this.ParentScene.addCamera(this);
    }
}
export default Camera;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkNvcmUvU2NlbmVPYmplY3RzL0NhbWVyYS9DYW1lcmEudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ik9BQU8sV0FBVyxNQUFNLGdCQUFnQjtPQUNqQyxNQUFNLE1BQU0sc0JBQXNCO09BQ2xDLEVBQUMsSUFBSSxFQUFDLE1BQU0sV0FBVztPQUN2QixTQUFTLE1BQU0seUJBQXlCO0FBRS9DOztHQUVHO0FBQ0gscUJBQThCLFdBQVc7SUFBekM7UUFBOEIsZUFBVztRQVVoQyx5QkFBb0IsR0FBVyxJQUFJLE1BQU0sRUFBRSxDQUFDO1FBRTVDLDRCQUF1QixHQUFXLElBQUksTUFBTSxFQUFFLENBQUM7UUFFdkQ7O1dBRUc7UUFDSyxrQkFBYSxHQUFjLElBQUksU0FBUyxFQUFFLENBQUM7UUFFM0MsZUFBVSxHQUFXLElBQUksTUFBTSxFQUFFLENBQUM7UUFFbEMscUJBQWdCLEdBQVcsSUFBSSxNQUFNLEVBQUUsQ0FBQztRQUV4Qyx3QkFBbUIsR0FBVyxJQUFJLE1BQU0sRUFBRSxDQUFDO0lBZ0JwRCxDQUFDO0lBckNDLElBQVcsR0FBRztRQUNaLE1BQU0sQ0FBQyxDQUFDLENBQUM7SUFDWCxDQUFDO0lBRUQsSUFBVyxJQUFJO1FBQ2IsTUFBTSxDQUFDLENBQUMsQ0FBQztJQUNYLENBQUM7SUFpQlMsNEJBQTRCO1FBQ3BDLElBQUksQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLG9CQUFvQixDQUFDLFdBQVcsRUFBRSxJQUFJLENBQUMsZ0JBQWdCLENBQUMsV0FBVyxFQUFFLElBQUksQ0FBQyxVQUFVLENBQUMsV0FBVyxDQUFDLENBQUM7UUFDaEgsSUFBSSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsdUJBQXVCLENBQUMsV0FBVyxFQUFFLElBQUksQ0FBQyxvQkFBb0IsQ0FBQyxXQUFXLENBQUMsQ0FBQztRQUM3RixTQUFTLENBQUMsa0JBQWtCLENBQUMsSUFBSSxDQUFDLGFBQWEsQ0FBQyxDQUFDO1FBQ2pELElBQUksQ0FBQyxhQUFhLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyx1QkFBdUIsQ0FBQyxDQUFDO0lBQzdELENBQUM7SUFFTSxNQUFNO1FBQ1gsS0FBSyxDQUFDLE1BQU0sRUFBRSxDQUFDO0lBQ2pCLENBQUM7SUFFTSxvQkFBb0I7UUFDekIsSUFBSSxDQUFDLFdBQVcsQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDbkMsQ0FBQztBQUNILENBQUM7QUFFRCxlQUFlLE1BQU0sQ0FBQyIsImZpbGUiOiJDb3JlL1NjZW5lT2JqZWN0cy9DYW1lcmEvQ2FtZXJhLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFNjZW5lT2JqZWN0IGZyb20gXCIuLi9TY2VuZU9iamVjdFwiO1xuaW1wb3J0IE1hdHJpeCBmcm9tIFwiLi4vLi4vLi4vTWF0aC9NYXRyaXhcIjtcbmltcG9ydCB7bWF0NH0gZnJvbSBcImdsLW1hdHJpeFwiO1xuaW1wb3J0IFBvaW50TGlzdCBmcm9tIFwiLi4vLi4vLi4vTWF0aC9Qb2ludExpc3RcIjtcblxuLyoqXG4gKiBCYXNlbWVudCBjbGFzcyBvZiBDYW1lcmEuIFRoZXNlIGNsYXNzIHJlbGF0ZWQgdG8gY2FtZXJhIGFyZSBvbmUgb2YgU2NlbmVPYmplY3QgaW4galRocmVlLlxuICovXG5hYnN0cmFjdCBjbGFzcyBDYW1lcmEgZXh0ZW5kcyBTY2VuZU9iamVjdCB7XG5cbiAgcHVibGljIGdldCBGYXIoKTogbnVtYmVyIHtcbiAgICByZXR1cm4gMDtcbiAgfVxuXG4gIHB1YmxpYyBnZXQgTmVhcigpOiBudW1iZXIge1xuICAgIHJldHVybiAwO1xuICB9XG5cbiAgcHVibGljIHZpZXdQcm9qZWN0aW9uTWF0cml4OiBNYXRyaXggPSBuZXcgTWF0cml4KCk7XG5cbiAgcHVibGljIHZpZXdQcm9qZWN0aW9uSW52TWF0cml4OiBNYXRyaXggPSBuZXcgTWF0cml4KCk7XG5cblx0LyoqXG5cdCAqIFZpZXcgZnJ1c3R1bSB2ZXJ0ZXggcG9pbnRzIGluIFdvcmxkIHNwYWNlXG5cdCAqL1xuICBwdWJsaWMgZnJ1c3R1bVBvaW50czogUG9pbnRMaXN0ID0gbmV3IFBvaW50TGlzdCgpO1xuXG4gIHB1YmxpYyB2aWV3TWF0cml4OiBNYXRyaXggPSBuZXcgTWF0cml4KCk7XG5cbiAgcHVibGljIHByb2plY3Rpb25NYXRyaXg6IE1hdHJpeCA9IG5ldyBNYXRyaXgoKTtcblxuICBwdWJsaWMgaW52UHJvamVjdGlvbk1hdHJpeDogTWF0cml4ID0gbmV3IE1hdHJpeCgpO1xuXG4gIHByb3RlY3RlZCBfX3VwZGF0ZVZpZXdQcm9qZWN0aW9uTWF0cml4KCk6IHZvaWQge1xuICAgIG1hdDQubXVsKHRoaXMudmlld1Byb2plY3Rpb25NYXRyaXgucmF3RWxlbWVudHMsIHRoaXMucHJvamVjdGlvbk1hdHJpeC5yYXdFbGVtZW50cywgdGhpcy52aWV3TWF0cml4LnJhd0VsZW1lbnRzKTtcbiAgICBtYXQ0LmludmVydCh0aGlzLnZpZXdQcm9qZWN0aW9uSW52TWF0cml4LnJhd0VsZW1lbnRzLCB0aGlzLnZpZXdQcm9qZWN0aW9uTWF0cml4LnJhd0VsZW1lbnRzKTtcbiAgICBQb2ludExpc3QuaW5pdGlhbGl6ZVdpdGhDdWJlKHRoaXMuZnJ1c3R1bVBvaW50cyk7XG4gICAgdGhpcy5mcnVzdHVtUG9pbnRzLnRyYW5zZm9ybSh0aGlzLnZpZXdQcm9qZWN0aW9uSW52TWF0cml4KTtcbiAgfVxuXG4gIHB1YmxpYyB1cGRhdGUoKTogdm9pZCB7XG4gICAgc3VwZXIudXBkYXRlKCk7XG4gIH1cblxuICBwdWJsaWMgb25QYXJlbnRTY2VuZUNoYW5nZWQoKTogdm9pZCB7XG4gICAgdGhpcy5QYXJlbnRTY2VuZS5hZGRDYW1lcmEodGhpcyk7XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgQ2FtZXJhO1xuIl0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9

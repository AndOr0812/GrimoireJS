import ViewCamera from "./ViewCameraBase";
import { mat4 } from "gl-matrix";
class PerspectiveCamera extends ViewCamera {
    constructor(...args) {
        super(...args);
        this._fovy = Math.PI / 4;
        this._aspect = 1;
        this._near = 0.1;
        this._far = 10;
    }
    _updateProjectionMatrix() {
        mat4.perspective(this.projectionMatrix.rawElements, this._fovy, this._aspect, this._near, this._far);
        mat4.invert(this.invProjectionMatrix.rawElements, this.projectionMatrix.rawElements);
        this.__updateViewProjectionMatrix();
    }
    get Fovy() {
        return this._fovy;
    }
    set Fovy(fovy) {
        this._fovy = fovy;
        this._updateProjectionMatrix();
    }
    get Aspect() {
        return this._aspect;
    }
    set Aspect(aspect) {
        this._aspect = aspect;
        this._updateProjectionMatrix();
    }
    get Near() {
        return this._near;
    }
    set Near(near) {
        this._near = near;
        this._updateProjectionMatrix();
    }
    get Far() {
        return this._far;
    }
    set Far(far) {
        this._far = far;
        this._updateProjectionMatrix();
    }
}
export default PerspectiveCamera;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkNvcmUvU2NlbmVPYmplY3RzL0NhbWVyYS9QZXJzcGVjdGl2ZUNhbWVyYS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiT0FBTyxVQUFVLE1BQU0sa0JBQWtCO09BQ2xDLEVBQUMsSUFBSSxFQUFDLE1BQU0sV0FBVztBQUM5QixnQ0FBZ0MsVUFBVTtJQUExQztRQUFnQyxlQUFVO1FBQ2hDLFVBQUssR0FBVyxJQUFJLENBQUMsRUFBRSxHQUFHLENBQUMsQ0FBQztRQUM1QixZQUFPLEdBQVcsQ0FBQyxDQUFDO1FBQ3BCLFVBQUssR0FBVyxHQUFHLENBQUM7UUFDcEIsU0FBSSxHQUFXLEVBQUUsQ0FBQztJQTJDNUIsQ0FBQztJQXpDUyx1QkFBdUI7UUFDN0IsSUFBSSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsV0FBVyxFQUFFLElBQUksQ0FBQyxLQUFLLEVBQUUsSUFBSSxDQUFDLE9BQU8sRUFBRSxJQUFJLENBQUMsS0FBSyxFQUFFLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUNyRyxJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxtQkFBbUIsQ0FBQyxXQUFXLEVBQUUsSUFBSSxDQUFDLGdCQUFnQixDQUFDLFdBQVcsQ0FBQyxDQUFDO1FBQ3JGLElBQUksQ0FBQyw0QkFBNEIsRUFBRSxDQUFDO0lBQ3RDLENBQUM7SUFFRCxJQUFXLElBQUk7UUFDYixNQUFNLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQztJQUNwQixDQUFDO0lBRUQsSUFBVyxJQUFJLENBQUMsSUFBWTtRQUMxQixJQUFJLENBQUMsS0FBSyxHQUFHLElBQUksQ0FBQztRQUNsQixJQUFJLENBQUMsdUJBQXVCLEVBQUUsQ0FBQztJQUNqQyxDQUFDO0lBRUQsSUFBVyxNQUFNO1FBQ2YsTUFBTSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUM7SUFDdEIsQ0FBQztJQUVELElBQVcsTUFBTSxDQUFDLE1BQWM7UUFDOUIsSUFBSSxDQUFDLE9BQU8sR0FBRyxNQUFNLENBQUM7UUFDdEIsSUFBSSxDQUFDLHVCQUF1QixFQUFFLENBQUM7SUFDakMsQ0FBQztJQUVELElBQVcsSUFBSTtRQUNiLE1BQU0sQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDO0lBQ3BCLENBQUM7SUFFRCxJQUFXLElBQUksQ0FBQyxJQUFZO1FBQzFCLElBQUksQ0FBQyxLQUFLLEdBQUcsSUFBSSxDQUFDO1FBQ2xCLElBQUksQ0FBQyx1QkFBdUIsRUFBRSxDQUFDO0lBQ2pDLENBQUM7SUFFRCxJQUFXLEdBQUc7UUFDWixNQUFNLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQztJQUNuQixDQUFDO0lBRUQsSUFBVyxHQUFHLENBQUMsR0FBVztRQUN4QixJQUFJLENBQUMsSUFBSSxHQUFHLEdBQUcsQ0FBQztRQUNoQixJQUFJLENBQUMsdUJBQXVCLEVBQUUsQ0FBQztJQUNqQyxDQUFDO0FBQ0gsQ0FBQztBQUVELGVBQWUsaUJBQWlCLENBQUMiLCJmaWxlIjoiQ29yZS9TY2VuZU9iamVjdHMvQ2FtZXJhL1BlcnNwZWN0aXZlQ2FtZXJhLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFZpZXdDYW1lcmEgZnJvbSBcIi4vVmlld0NhbWVyYUJhc2VcIjtcbmltcG9ydCB7bWF0NH0gZnJvbSBcImdsLW1hdHJpeFwiO1xuY2xhc3MgUGVyc3BlY3RpdmVDYW1lcmEgZXh0ZW5kcyBWaWV3Q2FtZXJhIHtcbiAgcHJpdmF0ZSBfZm92eTogbnVtYmVyID0gTWF0aC5QSSAvIDQ7XG4gIHByaXZhdGUgX2FzcGVjdDogbnVtYmVyID0gMTtcbiAgcHJpdmF0ZSBfbmVhcjogbnVtYmVyID0gMC4xO1xuICBwcml2YXRlIF9mYXI6IG51bWJlciA9IDEwO1xuXG4gIHByaXZhdGUgX3VwZGF0ZVByb2plY3Rpb25NYXRyaXgoKTogdm9pZCB7XG4gICAgbWF0NC5wZXJzcGVjdGl2ZSh0aGlzLnByb2plY3Rpb25NYXRyaXgucmF3RWxlbWVudHMsIHRoaXMuX2ZvdnksIHRoaXMuX2FzcGVjdCwgdGhpcy5fbmVhciwgdGhpcy5fZmFyKTtcbiAgICBtYXQ0LmludmVydCh0aGlzLmludlByb2plY3Rpb25NYXRyaXgucmF3RWxlbWVudHMsIHRoaXMucHJvamVjdGlvbk1hdHJpeC5yYXdFbGVtZW50cyk7XG4gICAgdGhpcy5fX3VwZGF0ZVZpZXdQcm9qZWN0aW9uTWF0cml4KCk7XG4gIH1cblxuICBwdWJsaWMgZ2V0IEZvdnkoKTogbnVtYmVyIHtcbiAgICByZXR1cm4gdGhpcy5fZm92eTtcbiAgfVxuXG4gIHB1YmxpYyBzZXQgRm92eShmb3Z5OiBudW1iZXIpIHtcbiAgICB0aGlzLl9mb3Z5ID0gZm92eTtcbiAgICB0aGlzLl91cGRhdGVQcm9qZWN0aW9uTWF0cml4KCk7XG4gIH1cblxuICBwdWJsaWMgZ2V0IEFzcGVjdCgpOiBudW1iZXIge1xuICAgIHJldHVybiB0aGlzLl9hc3BlY3Q7XG4gIH1cblxuICBwdWJsaWMgc2V0IEFzcGVjdChhc3BlY3Q6IG51bWJlcikge1xuICAgIHRoaXMuX2FzcGVjdCA9IGFzcGVjdDtcbiAgICB0aGlzLl91cGRhdGVQcm9qZWN0aW9uTWF0cml4KCk7XG4gIH1cblxuICBwdWJsaWMgZ2V0IE5lYXIoKTogbnVtYmVyIHtcbiAgICByZXR1cm4gdGhpcy5fbmVhcjtcbiAgfVxuXG4gIHB1YmxpYyBzZXQgTmVhcihuZWFyOiBudW1iZXIpIHtcbiAgICB0aGlzLl9uZWFyID0gbmVhcjtcbiAgICB0aGlzLl91cGRhdGVQcm9qZWN0aW9uTWF0cml4KCk7XG4gIH1cblxuICBwdWJsaWMgZ2V0IEZhcigpOiBudW1iZXIge1xuICAgIHJldHVybiB0aGlzLl9mYXI7XG4gIH1cblxuICBwdWJsaWMgc2V0IEZhcihmYXI6IG51bWJlcikge1xuICAgIHRoaXMuX2ZhciA9IGZhcjtcbiAgICB0aGlzLl91cGRhdGVQcm9qZWN0aW9uTWF0cml4KCk7XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgUGVyc3BlY3RpdmVDYW1lcmE7XG4iXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0=

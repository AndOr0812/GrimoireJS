/**
 * List for constructor functions of converter classes.
 * Converters manage how an attribute will be parsed, converted into string, or animated.
 */
import AngleAttributeConverter from "./Converter/AngleAttributeConverter";
import NumberAttributeConverter from "./Converter/NumberAttributeConverter";
import IntegerAttributeConverter from "./Converter/IntegerAttributeConverter";
import Vector3AttributeConverter from "./Converter/Vector3AttributeConverter";
import RotationAttributeConverter from "./Converter/RotationAttributeConverter";
import Color4AttributeConverter from "./Converter/Color4AttributeConverter";
import Color3AttributeConverter from "./Converter/Color3AttributeConverter";
import BooleanAttributeConverter from "./Converter/BooleanAttributeConverter";
import StringAttributeConverter from "./Converter/StringAttributeConverter";
const converterList = {
    "angle": AngleAttributeConverter,
    "float": NumberAttributeConverter,
    "int": IntegerAttributeConverter,
    "vec3": Vector3AttributeConverter,
    "rotation": RotationAttributeConverter,
    "color4": Color4AttributeConverter,
    "color3": Color3AttributeConverter,
    "boolean": BooleanAttributeConverter,
    "string": StringAttributeConverter,
};
export default converterList;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkdvbWwvR29tbENvbnZlcnRlckxpc3QudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7OztHQUdHO09BRUksdUJBQXVCLE1BQU0scUNBQXFDO09BQ2xFLHdCQUF3QixNQUFNLHNDQUFzQztPQUNwRSx5QkFBeUIsTUFBTSx1Q0FBdUM7T0FDdEUseUJBQXlCLE1BQU0sdUNBQXVDO09BQ3RFLDBCQUEwQixNQUFNLHdDQUF3QztPQUN4RSx3QkFBd0IsTUFBTSxzQ0FBc0M7T0FDcEUsd0JBQXdCLE1BQU0sc0NBQXNDO09BQ3BFLHlCQUF5QixNQUFNLHVDQUF1QztPQUN0RSx3QkFBd0IsTUFBTSxzQ0FBc0M7QUFFM0UsTUFBTSxhQUFhLEdBQUc7SUFDcEIsT0FBTyxFQUFFLHVCQUF1QjtJQUNoQyxPQUFPLEVBQUUsd0JBQXdCO0lBQ2pDLEtBQUssRUFBRSx5QkFBeUI7SUFDaEMsTUFBTSxFQUFFLHlCQUF5QjtJQUNqQyxVQUFVLEVBQUUsMEJBQTBCO0lBQ3RDLFFBQVEsRUFBRSx3QkFBd0I7SUFDbEMsUUFBUSxFQUFFLHdCQUF3QjtJQUNsQyxTQUFTLEVBQUUseUJBQXlCO0lBQ3BDLFFBQVEsRUFBRSx3QkFBd0I7Q0FDbkMsQ0FBQztBQUNGLGVBQWUsYUFBYSxDQUFDIiwiZmlsZSI6IkdvbWwvR29tbENvbnZlcnRlckxpc3QuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIExpc3QgZm9yIGNvbnN0cnVjdG9yIGZ1bmN0aW9ucyBvZiBjb252ZXJ0ZXIgY2xhc3Nlcy5cbiAqIENvbnZlcnRlcnMgbWFuYWdlIGhvdyBhbiBhdHRyaWJ1dGUgd2lsbCBiZSBwYXJzZWQsIGNvbnZlcnRlZCBpbnRvIHN0cmluZywgb3IgYW5pbWF0ZWQuXG4gKi9cblxuaW1wb3J0IEFuZ2xlQXR0cmlidXRlQ29udmVydGVyIGZyb20gXCIuL0NvbnZlcnRlci9BbmdsZUF0dHJpYnV0ZUNvbnZlcnRlclwiO1xuaW1wb3J0IE51bWJlckF0dHJpYnV0ZUNvbnZlcnRlciBmcm9tIFwiLi9Db252ZXJ0ZXIvTnVtYmVyQXR0cmlidXRlQ29udmVydGVyXCI7XG5pbXBvcnQgSW50ZWdlckF0dHJpYnV0ZUNvbnZlcnRlciBmcm9tIFwiLi9Db252ZXJ0ZXIvSW50ZWdlckF0dHJpYnV0ZUNvbnZlcnRlclwiO1xuaW1wb3J0IFZlY3RvcjNBdHRyaWJ1dGVDb252ZXJ0ZXIgZnJvbSBcIi4vQ29udmVydGVyL1ZlY3RvcjNBdHRyaWJ1dGVDb252ZXJ0ZXJcIjtcbmltcG9ydCBSb3RhdGlvbkF0dHJpYnV0ZUNvbnZlcnRlciBmcm9tIFwiLi9Db252ZXJ0ZXIvUm90YXRpb25BdHRyaWJ1dGVDb252ZXJ0ZXJcIjtcbmltcG9ydCBDb2xvcjRBdHRyaWJ1dGVDb252ZXJ0ZXIgZnJvbSBcIi4vQ29udmVydGVyL0NvbG9yNEF0dHJpYnV0ZUNvbnZlcnRlclwiO1xuaW1wb3J0IENvbG9yM0F0dHJpYnV0ZUNvbnZlcnRlciBmcm9tIFwiLi9Db252ZXJ0ZXIvQ29sb3IzQXR0cmlidXRlQ29udmVydGVyXCI7XG5pbXBvcnQgQm9vbGVhbkF0dHJpYnV0ZUNvbnZlcnRlciBmcm9tIFwiLi9Db252ZXJ0ZXIvQm9vbGVhbkF0dHJpYnV0ZUNvbnZlcnRlclwiO1xuaW1wb3J0IFN0cmluZ0F0dHJpYnV0ZUNvbnZlcnRlciBmcm9tIFwiLi9Db252ZXJ0ZXIvU3RyaW5nQXR0cmlidXRlQ29udmVydGVyXCI7XG5cbmNvbnN0IGNvbnZlcnRlckxpc3QgPSB7XG4gIFwiYW5nbGVcIjogQW5nbGVBdHRyaWJ1dGVDb252ZXJ0ZXIsXG4gIFwiZmxvYXRcIjogTnVtYmVyQXR0cmlidXRlQ29udmVydGVyLFxuICBcImludFwiOiBJbnRlZ2VyQXR0cmlidXRlQ29udmVydGVyLFxuICBcInZlYzNcIjogVmVjdG9yM0F0dHJpYnV0ZUNvbnZlcnRlcixcbiAgXCJyb3RhdGlvblwiOiBSb3RhdGlvbkF0dHJpYnV0ZUNvbnZlcnRlcixcbiAgXCJjb2xvcjRcIjogQ29sb3I0QXR0cmlidXRlQ29udmVydGVyLFxuICBcImNvbG9yM1wiOiBDb2xvcjNBdHRyaWJ1dGVDb252ZXJ0ZXIsXG4gIFwiYm9vbGVhblwiOiBCb29sZWFuQXR0cmlidXRlQ29udmVydGVyLFxuICBcInN0cmluZ1wiOiBTdHJpbmdBdHRyaWJ1dGVDb252ZXJ0ZXIsXG59O1xuZXhwb3J0IGRlZmF1bHQgY29udmVydGVyTGlzdDtcbiJdLCJzb3VyY2VSb290IjoiL3NvdXJjZS8ifQ==

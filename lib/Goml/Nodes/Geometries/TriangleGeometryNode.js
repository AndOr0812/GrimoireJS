import GeometryNodeBase from "./GeometryNodeBase";
import Vector3 from "../../../Math/Vector3";
import TriangleGeometry from "../../../Core/Geometries/TriangleGeometry";
class GomlTreeTriNode extends GeometryNodeBase {
    constructor() {
        super();
        this.attributes.defineAttribute({
            "first": {
                value: new Vector3(-1, 0, 0),
                converter: "vec3",
                onchanged: this._onFirstAttrChanged,
            },
            "second": {
                value: new Vector3(0, 1, 0),
                converter: "vec3",
                onchanged: this._onSecondAttrChanged,
            },
            "third": {
                value: new Vector3(1, 0, 0),
                converter: "vec3",
                onchanged: this._onThirdAttrChanged,
            },
        });
    }
    __onMount() {
        super.__onMount();
    }
    __constructGeometry(name) {
        return new TriangleGeometry(name);
    }
    _onFirstAttrChanged(attr) {
        this.target.First = attr.Value;
        attr.done();
    }
    _onSecondAttrChanged(attr) {
        this.target.Second = attr.Value;
        attr.done();
    }
    _onThirdAttrChanged(attr) {
        this.target.Third = attr.Value;
        attr.done();
    }
}
export default GomlTreeTriNode;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkdvbWwvTm9kZXMvR2VvbWV0cmllcy9UcmlhbmdsZUdlb21ldHJ5Tm9kZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiT0FBTyxnQkFBZ0IsTUFBTSxvQkFBb0I7T0FDMUMsT0FBTyxNQUFNLHVCQUF1QjtPQUNwQyxnQkFBZ0IsTUFBTSwyQ0FBMkM7QUFFeEUsOEJBQThCLGdCQUFnQjtJQUU1QztRQUNFLE9BQU8sQ0FBQztRQUNSLElBQUksQ0FBQyxVQUFVLENBQUMsZUFBZSxDQUFDO1lBQzlCLE9BQU8sRUFBRTtnQkFDUCxLQUFLLEVBQUUsSUFBSSxPQUFPLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQztnQkFDNUIsU0FBUyxFQUFFLE1BQU07Z0JBQ2pCLFNBQVMsRUFBRSxJQUFJLENBQUMsbUJBQW1CO2FBQ3BDO1lBQ0QsUUFBUSxFQUFFO2dCQUNSLEtBQUssRUFBRSxJQUFJLE9BQU8sQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQztnQkFDM0IsU0FBUyxFQUFFLE1BQU07Z0JBQ2pCLFNBQVMsRUFBRSxJQUFJLENBQUMsb0JBQW9CO2FBQ3JDO1lBQ0QsT0FBTyxFQUFFO2dCQUNQLEtBQUssRUFBRSxJQUFJLE9BQU8sQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQztnQkFDM0IsU0FBUyxFQUFFLE1BQU07Z0JBQ2pCLFNBQVMsRUFBRSxJQUFJLENBQUMsbUJBQW1CO2FBQ3BDO1NBQ0YsQ0FBQyxDQUFDO0lBQ0wsQ0FBQztJQUVTLFNBQVM7UUFDakIsS0FBSyxDQUFDLFNBQVMsRUFBRSxDQUFDO0lBQ3BCLENBQUM7SUFFUyxtQkFBbUIsQ0FBQyxJQUFZO1FBQ3hDLE1BQU0sQ0FBQyxJQUFJLGdCQUFnQixDQUFDLElBQUksQ0FBQyxDQUFDO0lBQ3BDLENBQUM7SUFFTyxtQkFBbUIsQ0FBQyxJQUFJO1FBQzlCLElBQUksQ0FBQyxNQUFNLENBQUMsS0FBSyxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUM7UUFDL0IsSUFBSSxDQUFDLElBQUksRUFBRSxDQUFDO0lBQ2QsQ0FBQztJQUNPLG9CQUFvQixDQUFDLElBQUk7UUFDL0IsSUFBSSxDQUFDLE1BQU0sQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQztRQUNoQyxJQUFJLENBQUMsSUFBSSxFQUFFLENBQUM7SUFDZCxDQUFDO0lBQ08sbUJBQW1CLENBQUMsSUFBSTtRQUM5QixJQUFJLENBQUMsTUFBTSxDQUFDLEtBQUssR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDO1FBQy9CLElBQUksQ0FBQyxJQUFJLEVBQUUsQ0FBQztJQUNkLENBQUM7QUFDSCxDQUFDO0FBRUQsZUFBZSxlQUFlLENBQUMiLCJmaWxlIjoiR29tbC9Ob2Rlcy9HZW9tZXRyaWVzL1RyaWFuZ2xlR2VvbWV0cnlOb2RlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEdlb21ldHJ5Tm9kZUJhc2UgZnJvbSBcIi4vR2VvbWV0cnlOb2RlQmFzZVwiO1xuaW1wb3J0IFZlY3RvcjMgZnJvbSBcIi4uLy4uLy4uL01hdGgvVmVjdG9yM1wiO1xuaW1wb3J0IFRyaWFuZ2xlR2VvbWV0cnkgZnJvbSBcIi4uLy4uLy4uL0NvcmUvR2VvbWV0cmllcy9UcmlhbmdsZUdlb21ldHJ5XCI7XG5cbmNsYXNzIEdvbWxUcmVlVHJpTm9kZSBleHRlbmRzIEdlb21ldHJ5Tm9kZUJhc2U8VHJpYW5nbGVHZW9tZXRyeT4ge1xuXG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHN1cGVyKCk7XG4gICAgdGhpcy5hdHRyaWJ1dGVzLmRlZmluZUF0dHJpYnV0ZSh7XG4gICAgICBcImZpcnN0XCI6IHtcbiAgICAgICAgdmFsdWU6IG5ldyBWZWN0b3IzKC0xLCAwLCAwKSxcbiAgICAgICAgY29udmVydGVyOiBcInZlYzNcIixcbiAgICAgICAgb25jaGFuZ2VkOiB0aGlzLl9vbkZpcnN0QXR0ckNoYW5nZWQsXG4gICAgICB9LFxuICAgICAgXCJzZWNvbmRcIjoge1xuICAgICAgICB2YWx1ZTogbmV3IFZlY3RvcjMoMCwgMSwgMCksXG4gICAgICAgIGNvbnZlcnRlcjogXCJ2ZWMzXCIsXG4gICAgICAgIG9uY2hhbmdlZDogdGhpcy5fb25TZWNvbmRBdHRyQ2hhbmdlZCxcbiAgICAgIH0sXG4gICAgICBcInRoaXJkXCI6IHtcbiAgICAgICAgdmFsdWU6IG5ldyBWZWN0b3IzKDEsIDAsIDApLFxuICAgICAgICBjb252ZXJ0ZXI6IFwidmVjM1wiLFxuICAgICAgICBvbmNoYW5nZWQ6IHRoaXMuX29uVGhpcmRBdHRyQ2hhbmdlZCxcbiAgICAgIH0sXG4gICAgfSk7XG4gIH1cblxuICBwcm90ZWN0ZWQgX19vbk1vdW50KCk6IHZvaWQge1xuICAgIHN1cGVyLl9fb25Nb3VudCgpO1xuICB9XG5cbiAgcHJvdGVjdGVkIF9fY29uc3RydWN0R2VvbWV0cnkobmFtZTogc3RyaW5nKTogVHJpYW5nbGVHZW9tZXRyeSB7XG4gICAgcmV0dXJuIG5ldyBUcmlhbmdsZUdlb21ldHJ5KG5hbWUpO1xuICB9XG5cbiAgcHJpdmF0ZSBfb25GaXJzdEF0dHJDaGFuZ2VkKGF0dHIpOiB2b2lkIHtcbiAgICB0aGlzLnRhcmdldC5GaXJzdCA9IGF0dHIuVmFsdWU7XG4gICAgYXR0ci5kb25lKCk7XG4gIH1cbiAgcHJpdmF0ZSBfb25TZWNvbmRBdHRyQ2hhbmdlZChhdHRyKTogdm9pZCB7XG4gICAgdGhpcy50YXJnZXQuU2Vjb25kID0gYXR0ci5WYWx1ZTtcbiAgICBhdHRyLmRvbmUoKTtcbiAgfVxuICBwcml2YXRlIF9vblRoaXJkQXR0ckNoYW5nZWQoYXR0cik6IHZvaWQge1xuICAgIHRoaXMudGFyZ2V0LlRoaXJkID0gYXR0ci5WYWx1ZTtcbiAgICBhdHRyLmRvbmUoKTtcbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBHb21sVHJlZVRyaU5vZGU7XG4iXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0=

import PerspectiveCamera from "../../../../Core/SceneObjects/Camera/PerspectiveCamera";
import CameraNodeBase from "./CameraNodeBase";
class CameraNode extends CameraNodeBase {
    constructor() {
        super();
        this.attributes.defineAttribute({
            "fovy": {
                value: Math.PI / 4,
                converter: "angle",
                onchanged: this._onFovyAttrChanged.bind(this),
            },
            "aspect": {
                value: 0,
                converter: "float",
                onchanged: this._onAspectAttrChanged.bind(this),
            },
            "near": {
                value: 0.1,
                converter: "float",
                onchanged: this._onNearAttrChanged.bind(this),
            },
            "far": {
                value: 10,
                converter: "float",
                onchanged: this._onFarAttrChanged.bind(this),
            },
        });
        this.on("update-scene-object", (obj) => {
            this._onFovyAttrChanged.call(this, this.attributes.getAttribute("fovy"));
            this._onAspectAttrChanged.call(this, this.attributes.getAttribute("aspect"));
            this._onNearAttrChanged.call(this, this.attributes.getAttribute("near"));
            this._onFarAttrChanged.call(this, this.attributes.getAttribute("far"));
        });
    }
    __constructCamera() {
        return new PerspectiveCamera();
    }
    __onMount() {
        super.__onMount();
    }
    get Fovy() {
        return this.attributes.getValue("fovy");
    }
    get Aspect() {
        return this.attributes.getValue("aspect");
    }
    get Near() {
        return this.attributes.getValue("near");
    }
    get Far() {
        return this.attributes.getValue("far");
    }
    _onFovyAttrChanged(attr) {
        if (this.TargetSceneObject) {
            this.TargetSceneObject.Fovy = attr.Value;
            attr.done();
        }
    }
    _onAspectAttrChanged(attr) {
        if (this.TargetSceneObject) {
            this.TargetSceneObject.Aspect = attr.Value;
            attr.done();
        }
    }
    _onNearAttrChanged(attr) {
        if (this.TargetSceneObject) {
            this.TargetSceneObject.Near = attr.Value;
            attr.done();
        }
    }
    _onFarAttrChanged(attr) {
        if (this.TargetSceneObject) {
            this.TargetSceneObject.Far = attr.Value;
            attr.done();
        }
    }
}
export default CameraNode;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkdvbWwvTm9kZXMvU2NlbmVPYmplY3RzL0NhbWVyYXMvQ2FtZXJhTm9kZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiT0FBTyxpQkFBaUIsTUFBTSx3REFBd0Q7T0FDL0UsY0FBYyxNQUFNLGtCQUFrQjtBQUc3Qyx5QkFBeUIsY0FBYztJQUVyQztRQUNFLE9BQU8sQ0FBQztRQUNSLElBQUksQ0FBQyxVQUFVLENBQUMsZUFBZSxDQUFDO1lBQzlCLE1BQU0sRUFBRTtnQkFDTixLQUFLLEVBQUUsSUFBSSxDQUFDLEVBQUUsR0FBRyxDQUFDO2dCQUNsQixTQUFTLEVBQUUsT0FBTztnQkFDbEIsU0FBUyxFQUFFLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDO2FBQzlDO1lBQ0QsUUFBUSxFQUFFO2dCQUNSLEtBQUssRUFBRSxDQUFDO2dCQUNSLFNBQVMsRUFBRSxPQUFPO2dCQUNsQixTQUFTLEVBQUUsSUFBSSxDQUFDLG9CQUFvQixDQUFDLElBQUksQ0FBQyxJQUFJLENBQUM7YUFDaEQ7WUFDRCxNQUFNLEVBQUU7Z0JBQ04sS0FBSyxFQUFFLEdBQUc7Z0JBQ1YsU0FBUyxFQUFFLE9BQU87Z0JBQ2xCLFNBQVMsRUFBRSxJQUFJLENBQUMsa0JBQWtCLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQzthQUM5QztZQUNELEtBQUssRUFBRTtnQkFDTCxLQUFLLEVBQUUsRUFBRTtnQkFDVCxTQUFTLEVBQUUsT0FBTztnQkFDbEIsU0FBUyxFQUFFLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDO2FBQzdDO1NBQ0YsQ0FBQyxDQUFDO1FBQ0gsSUFBSSxDQUFDLEVBQUUsQ0FBQyxxQkFBcUIsRUFBRSxDQUFDLEdBQXNCO1lBQ3BELElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxJQUFJLENBQUMsSUFBSSxFQUFFLElBQUksQ0FBQyxVQUFVLENBQUMsWUFBWSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUM7WUFDekUsSUFBSSxDQUFDLG9CQUFvQixDQUFDLElBQUksQ0FBQyxJQUFJLEVBQUUsSUFBSSxDQUFDLFVBQVUsQ0FBQyxZQUFZLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQztZQUM3RSxJQUFJLENBQUMsa0JBQWtCLENBQUMsSUFBSSxDQUFDLElBQUksRUFBRSxJQUFJLENBQUMsVUFBVSxDQUFDLFlBQVksQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDO1lBQ3pFLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxJQUFJLENBQUMsSUFBSSxFQUFFLElBQUksQ0FBQyxVQUFVLENBQUMsWUFBWSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUM7UUFDekUsQ0FBQyxDQUFDLENBQUM7SUFDTCxDQUFDO0lBRVMsaUJBQWlCO1FBQ3pCLE1BQU0sQ0FBQyxJQUFJLGlCQUFpQixFQUFFLENBQUM7SUFDakMsQ0FBQztJQUVTLFNBQVM7UUFDakIsS0FBSyxDQUFDLFNBQVMsRUFBRSxDQUFDO0lBQ3BCLENBQUM7SUFFRCxJQUFXLElBQUk7UUFDYixNQUFNLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxRQUFRLENBQUMsTUFBTSxDQUFDLENBQUM7SUFDMUMsQ0FBQztJQUVELElBQVcsTUFBTTtRQUNmLE1BQU0sQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLFFBQVEsQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUM1QyxDQUFDO0lBRUQsSUFBVyxJQUFJO1FBQ2IsTUFBTSxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsUUFBUSxDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBQzFDLENBQUM7SUFFRCxJQUFXLEdBQUc7UUFDWixNQUFNLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxRQUFRLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDekMsQ0FBQztJQUVPLGtCQUFrQixDQUFDLElBQW1CO1FBQzVDLEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxDQUFDLENBQUM7WUFDUCxJQUFJLENBQUMsaUJBQWtCLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUM7WUFDOUQsSUFBSSxDQUFDLElBQUksRUFBRSxDQUFDO1FBQ2QsQ0FBQztJQUNILENBQUM7SUFFTyxvQkFBb0IsQ0FBQyxJQUFtQjtRQUM5QyxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsaUJBQWlCLENBQUMsQ0FBQyxDQUFDO1lBQ1AsSUFBSSxDQUFDLGlCQUFrQixDQUFDLE1BQU0sR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDO1lBQ2hFLElBQUksQ0FBQyxJQUFJLEVBQUUsQ0FBQztRQUNkLENBQUM7SUFDSCxDQUFDO0lBRU8sa0JBQWtCLENBQUMsSUFBbUI7UUFDNUMsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLGlCQUFpQixDQUFDLENBQUMsQ0FBQztZQUNQLElBQUksQ0FBQyxpQkFBa0IsQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQztZQUM5RCxJQUFJLENBQUMsSUFBSSxFQUFFLENBQUM7UUFDZCxDQUFDO0lBQ0gsQ0FBQztJQUVPLGlCQUFpQixDQUFDLElBQW1CO1FBQzNDLEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxDQUFDLENBQUM7WUFDUCxJQUFJLENBQUMsaUJBQWtCLENBQUMsR0FBRyxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUM7WUFDN0QsSUFBSSxDQUFDLElBQUksRUFBRSxDQUFDO1FBQ2QsQ0FBQztJQUNILENBQUM7QUFDSCxDQUFDO0FBRUQsZUFBZSxVQUFVLENBQUMiLCJmaWxlIjoiR29tbC9Ob2Rlcy9TY2VuZU9iamVjdHMvQ2FtZXJhcy9DYW1lcmFOb2RlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFBlcnNwZWN0aXZlQ2FtZXJhIGZyb20gXCIuLi8uLi8uLi8uLi9Db3JlL1NjZW5lT2JqZWN0cy9DYW1lcmEvUGVyc3BlY3RpdmVDYW1lcmFcIjtcbmltcG9ydCBDYW1lcmFOb2RlQmFzZSBmcm9tIFwiLi9DYW1lcmFOb2RlQmFzZVwiO1xuaW1wb3J0IEdvbWxBdHRyaWJ1dGUgZnJvbSBcIi4uLy4uLy4uL0dvbWxBdHRyaWJ1dGVcIjtcblxuY2xhc3MgQ2FtZXJhTm9kZSBleHRlbmRzIENhbWVyYU5vZGVCYXNlPFBlcnNwZWN0aXZlQ2FtZXJhPiB7XG5cbiAgY29uc3RydWN0b3IoKSB7XG4gICAgc3VwZXIoKTtcbiAgICB0aGlzLmF0dHJpYnV0ZXMuZGVmaW5lQXR0cmlidXRlKHtcbiAgICAgIFwiZm92eVwiOiB7XG4gICAgICAgIHZhbHVlOiBNYXRoLlBJIC8gNCxcbiAgICAgICAgY29udmVydGVyOiBcImFuZ2xlXCIsXG4gICAgICAgIG9uY2hhbmdlZDogdGhpcy5fb25Gb3Z5QXR0ckNoYW5nZWQuYmluZCh0aGlzKSxcbiAgICAgIH0sXG4gICAgICBcImFzcGVjdFwiOiB7XG4gICAgICAgIHZhbHVlOiAwLFxuICAgICAgICBjb252ZXJ0ZXI6IFwiZmxvYXRcIixcbiAgICAgICAgb25jaGFuZ2VkOiB0aGlzLl9vbkFzcGVjdEF0dHJDaGFuZ2VkLmJpbmQodGhpcyksXG4gICAgICB9LFxuICAgICAgXCJuZWFyXCI6IHtcbiAgICAgICAgdmFsdWU6IDAuMSxcbiAgICAgICAgY29udmVydGVyOiBcImZsb2F0XCIsXG4gICAgICAgIG9uY2hhbmdlZDogdGhpcy5fb25OZWFyQXR0ckNoYW5nZWQuYmluZCh0aGlzKSxcbiAgICAgIH0sXG4gICAgICBcImZhclwiOiB7XG4gICAgICAgIHZhbHVlOiAxMCxcbiAgICAgICAgY29udmVydGVyOiBcImZsb2F0XCIsXG4gICAgICAgIG9uY2hhbmdlZDogdGhpcy5fb25GYXJBdHRyQ2hhbmdlZC5iaW5kKHRoaXMpLFxuICAgICAgfSxcbiAgICB9KTtcbiAgICB0aGlzLm9uKFwidXBkYXRlLXNjZW5lLW9iamVjdFwiLCAob2JqOiBQZXJzcGVjdGl2ZUNhbWVyYSkgPT4ge1xuICAgICAgdGhpcy5fb25Gb3Z5QXR0ckNoYW5nZWQuY2FsbCh0aGlzLCB0aGlzLmF0dHJpYnV0ZXMuZ2V0QXR0cmlidXRlKFwiZm92eVwiKSk7XG4gICAgICB0aGlzLl9vbkFzcGVjdEF0dHJDaGFuZ2VkLmNhbGwodGhpcywgdGhpcy5hdHRyaWJ1dGVzLmdldEF0dHJpYnV0ZShcImFzcGVjdFwiKSk7XG4gICAgICB0aGlzLl9vbk5lYXJBdHRyQ2hhbmdlZC5jYWxsKHRoaXMsIHRoaXMuYXR0cmlidXRlcy5nZXRBdHRyaWJ1dGUoXCJuZWFyXCIpKTtcbiAgICAgIHRoaXMuX29uRmFyQXR0ckNoYW5nZWQuY2FsbCh0aGlzLCB0aGlzLmF0dHJpYnV0ZXMuZ2V0QXR0cmlidXRlKFwiZmFyXCIpKTtcbiAgICB9KTtcbiAgfVxuXG4gIHByb3RlY3RlZCBfX2NvbnN0cnVjdENhbWVyYSgpOiBQZXJzcGVjdGl2ZUNhbWVyYSB7XG4gICAgcmV0dXJuIG5ldyBQZXJzcGVjdGl2ZUNhbWVyYSgpO1xuICB9XG5cbiAgcHJvdGVjdGVkIF9fb25Nb3VudCgpOiB2b2lkIHtcbiAgICBzdXBlci5fX29uTW91bnQoKTtcbiAgfVxuXG4gIHB1YmxpYyBnZXQgRm92eSgpOiBudW1iZXIge1xuICAgIHJldHVybiB0aGlzLmF0dHJpYnV0ZXMuZ2V0VmFsdWUoXCJmb3Z5XCIpO1xuICB9XG5cbiAgcHVibGljIGdldCBBc3BlY3QoKTogbnVtYmVyIHtcbiAgICByZXR1cm4gdGhpcy5hdHRyaWJ1dGVzLmdldFZhbHVlKFwiYXNwZWN0XCIpO1xuICB9XG5cbiAgcHVibGljIGdldCBOZWFyKCk6IG51bWJlciB7XG4gICAgcmV0dXJuIHRoaXMuYXR0cmlidXRlcy5nZXRWYWx1ZShcIm5lYXJcIik7XG4gIH1cblxuICBwdWJsaWMgZ2V0IEZhcigpOiBudW1iZXIge1xuICAgIHJldHVybiB0aGlzLmF0dHJpYnV0ZXMuZ2V0VmFsdWUoXCJmYXJcIik7XG4gIH1cblxuICBwcml2YXRlIF9vbkZvdnlBdHRyQ2hhbmdlZChhdHRyOiBHb21sQXR0cmlidXRlKTogdm9pZCB7XG4gICAgaWYgKHRoaXMuVGFyZ2V0U2NlbmVPYmplY3QpIHtcbiAgICAgICg8UGVyc3BlY3RpdmVDYW1lcmE+dGhpcy5UYXJnZXRTY2VuZU9iamVjdCkuRm92eSA9IGF0dHIuVmFsdWU7XG4gICAgICBhdHRyLmRvbmUoKTtcbiAgICB9XG4gIH1cblxuICBwcml2YXRlIF9vbkFzcGVjdEF0dHJDaGFuZ2VkKGF0dHI6IEdvbWxBdHRyaWJ1dGUpOiB2b2lkIHtcbiAgICBpZiAodGhpcy5UYXJnZXRTY2VuZU9iamVjdCkge1xuICAgICAgKDxQZXJzcGVjdGl2ZUNhbWVyYT50aGlzLlRhcmdldFNjZW5lT2JqZWN0KS5Bc3BlY3QgPSBhdHRyLlZhbHVlO1xuICAgICAgYXR0ci5kb25lKCk7XG4gICAgfVxuICB9XG5cbiAgcHJpdmF0ZSBfb25OZWFyQXR0ckNoYW5nZWQoYXR0cjogR29tbEF0dHJpYnV0ZSk6IHZvaWQge1xuICAgIGlmICh0aGlzLlRhcmdldFNjZW5lT2JqZWN0KSB7XG4gICAgICAoPFBlcnNwZWN0aXZlQ2FtZXJhPnRoaXMuVGFyZ2V0U2NlbmVPYmplY3QpLk5lYXIgPSBhdHRyLlZhbHVlO1xuICAgICAgYXR0ci5kb25lKCk7XG4gICAgfVxuICB9XG5cbiAgcHJpdmF0ZSBfb25GYXJBdHRyQ2hhbmdlZChhdHRyOiBHb21sQXR0cmlidXRlKTogdm9pZCB7XG4gICAgaWYgKHRoaXMuVGFyZ2V0U2NlbmVPYmplY3QpIHtcbiAgICAgICg8UGVyc3BlY3RpdmVDYW1lcmE+dGhpcy5UYXJnZXRTY2VuZU9iamVjdCkuRmFyID0gYXR0ci5WYWx1ZTtcbiAgICAgIGF0dHIuZG9uZSgpO1xuICAgIH1cbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBDYW1lcmFOb2RlO1xuIl0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9

import J3Object from "../J3Object";
import J3ObjectBase from "../J3ObjectBase";
import GomlTreeNodeBase from "../../Goml/GomlTreeNodeBase";
import isString from "lodash.isstring";
class TreeTraversal extends J3ObjectBase {
    find(argu) {
        switch (true) {
            case (isString(argu)):
                let ret_node = [];
                this.__getArray().forEach((node) => {
                    ret_node = ret_node.concat(J3Object.find(argu, node));
                });
                return new J3Object(ret_node);
            case (argu instanceof GomlTreeNodeBase):
                throw new Error("Not implemented yet");
            case (argu instanceof J3Object):
                throw new Error("Not implemented yet");
            default:
                throw new Error("Argument type is not correct");
        }
    }
}
export default TreeTraversal;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkludGVyZmFjZS9UcmF2ZXJzaW5nL1RyZWVUcmF2ZXJzYWwudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ik9BQU8sUUFBUSxNQUFNLGFBQWE7T0FDM0IsWUFBWSxNQUFNLGlCQUFpQjtPQUNuQyxnQkFBZ0IsTUFBTSw2QkFBNkI7T0FDbkQsUUFBUSxNQUFNLGlCQUFpQjtBQUV0Qyw0QkFBNEIsWUFBWTtJQUkvQixJQUFJLENBQUMsSUFBUztRQUNuQixNQUFNLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO1lBQ2IsS0FBSyxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsQ0FBQztnQkFDbkIsSUFBSSxRQUFRLEdBQXVCLEVBQUUsQ0FBQztnQkFDdEMsSUFBSSxDQUFDLFVBQVUsRUFBRSxDQUFDLE9BQU8sQ0FBQyxDQUFDLElBQUk7b0JBQzdCLFFBQVEsR0FBRyxRQUFRLENBQUMsTUFBTSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQVMsSUFBSSxFQUFFLElBQUksQ0FBQyxDQUFDLENBQUM7Z0JBQ2hFLENBQUMsQ0FBQyxDQUFDO2dCQUNILE1BQU0sQ0FBQyxJQUFJLFFBQVEsQ0FBQyxRQUFRLENBQUMsQ0FBQztZQUNoQyxLQUFLLENBQUMsSUFBSSxZQUFZLGdCQUFnQixDQUFDO2dCQUNyQyxNQUFNLElBQUksS0FBSyxDQUFDLHFCQUFxQixDQUFDLENBQUM7WUFDekMsS0FBSyxDQUFDLElBQUksWUFBWSxRQUFRLENBQUM7Z0JBQzdCLE1BQU0sSUFBSSxLQUFLLENBQUMscUJBQXFCLENBQUMsQ0FBQztZQUN6QztnQkFDRSxNQUFNLElBQUksS0FBSyxDQUFDLDhCQUE4QixDQUFDLENBQUM7UUFDcEQsQ0FBQztJQUNILENBQUM7QUFDSCxDQUFDO0FBRUQsZUFBZSxhQUFhLENBQUMiLCJmaWxlIjoiSW50ZXJmYWNlL1RyYXZlcnNpbmcvVHJlZVRyYXZlcnNhbC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBKM09iamVjdCBmcm9tIFwiLi4vSjNPYmplY3RcIjtcbmltcG9ydCBKM09iamVjdEJhc2UgZnJvbSBcIi4uL0ozT2JqZWN0QmFzZVwiO1xuaW1wb3J0IEdvbWxUcmVlTm9kZUJhc2UgZnJvbSBcIi4uLy4uL0dvbWwvR29tbFRyZWVOb2RlQmFzZVwiO1xuaW1wb3J0IGlzU3RyaW5nIGZyb20gXCJsb2Rhc2guaXNzdHJpbmdcIjtcblxuY2xhc3MgVHJlZVRyYXZlcnNhbCBleHRlbmRzIEozT2JqZWN0QmFzZSB7XG4gIHB1YmxpYyBmaW5kKHNlbGVjdG9yOiBzdHJpbmcpOiBKM09iamVjdDtcbiAgcHVibGljIGZpbmQobm9kZTogR29tbFRyZWVOb2RlQmFzZSk6IEozT2JqZWN0O1xuICBwdWJsaWMgZmluZChqM29iajogSjNPYmplY3QpOiBKM09iamVjdDtcbiAgcHVibGljIGZpbmQoYXJndTogYW55KTogSjNPYmplY3Qge1xuICAgIHN3aXRjaCAodHJ1ZSkge1xuICAgICAgY2FzZSAoaXNTdHJpbmcoYXJndSkpOlxuICAgICAgICBsZXQgcmV0X25vZGU6IEdvbWxUcmVlTm9kZUJhc2VbXSA9IFtdO1xuICAgICAgICB0aGlzLl9fZ2V0QXJyYXkoKS5mb3JFYWNoKChub2RlKSA9PiB7XG4gICAgICAgICAgcmV0X25vZGUgPSByZXRfbm9kZS5jb25jYXQoSjNPYmplY3QuZmluZCg8c3RyaW5nPmFyZ3UsIG5vZGUpKTtcbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiBuZXcgSjNPYmplY3QocmV0X25vZGUpO1xuICAgICAgY2FzZSAoYXJndSBpbnN0YW5jZW9mIEdvbWxUcmVlTm9kZUJhc2UpOlxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJOb3QgaW1wbGVtZW50ZWQgeWV0XCIpO1xuICAgICAgY2FzZSAoYXJndSBpbnN0YW5jZW9mIEozT2JqZWN0KTpcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiTm90IGltcGxlbWVudGVkIHlldFwiKTtcbiAgICAgIGRlZmF1bHQ6XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIkFyZ3VtZW50IHR5cGUgaXMgbm90IGNvcnJlY3RcIik7XG4gICAgfVxuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IFRyZWVUcmF2ZXJzYWw7XG4iXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0=
